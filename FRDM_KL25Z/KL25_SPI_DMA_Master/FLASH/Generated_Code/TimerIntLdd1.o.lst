   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TimerIntLdd1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	12
  22      00000000 
  22      00000000 
  23              		.section	.text.TimerIntLdd1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	TimerIntLdd1_Init
  26              		.code	16
  27              		.thumb_func
  29              	TimerIntLdd1_Init:
  30              	.LFB0:
  31              		.file 1 "../Generated_Code/TimerIntLdd1.c"
   1:../Generated_Code/TimerIntLdd1.c **** /* ###################################################################
   2:../Generated_Code/TimerIntLdd1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/TimerIntLdd1.c **** **     Filename    : TimerIntLdd1.c
   4:../Generated_Code/TimerIntLdd1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/TimerIntLdd1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/TimerIntLdd1.c **** **     Component   : TimerInt_LDD
   7:../Generated_Code/TimerIntLdd1.c **** **     Version     : Component 01.018, Driver 01.01, CPU db: 3.00.000
   8:../Generated_Code/TimerIntLdd1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/TimerIntLdd1.c **** **     Date/Time   : 2015-09-29, 14:34, # CodeGen: 6
  10:../Generated_Code/TimerIntLdd1.c **** **     Abstract    :
  11:../Generated_Code/TimerIntLdd1.c **** **          This TimerInt component implements a periodic interrupt.
  12:../Generated_Code/TimerIntLdd1.c **** **          When the component and its events are enabled, the "OnInterrupt"
  13:../Generated_Code/TimerIntLdd1.c **** **          event is called periodically with the period that you specify.
  14:../Generated_Code/TimerIntLdd1.c **** **          TimerInt supports also changing the period in runtime.
  15:../Generated_Code/TimerIntLdd1.c **** **          This TimerInt component provides a high level API for unified
  16:../Generated_Code/TimerIntLdd1.c **** **          hardware access to various timer devices using the TimerUnit
  17:../Generated_Code/TimerIntLdd1.c **** **          component.
  18:../Generated_Code/TimerIntLdd1.c **** **     Settings    :
  19:../Generated_Code/TimerIntLdd1.c **** **          Component name                                 : TimerIntLdd1
  20:../Generated_Code/TimerIntLdd1.c **** **          Periodic interrupt source                      : TPM0_MOD
  21:../Generated_Code/TimerIntLdd1.c **** **          Counter                                        : TPM0_CNT
  22:../Generated_Code/TimerIntLdd1.c **** **          Interrupt service/event                        : Enabled
  23:../Generated_Code/TimerIntLdd1.c **** **            Interrupt                                    : INT_TPM0
  24:../Generated_Code/TimerIntLdd1.c **** **            Interrupt priority                           : medium priority
  25:../Generated_Code/TimerIntLdd1.c **** **          Interrupt period                               : 100 ms
  26:../Generated_Code/TimerIntLdd1.c **** **          Initialization                                 : 
  27:../Generated_Code/TimerIntLdd1.c **** **            Enabled in init. code                        : yes
  28:../Generated_Code/TimerIntLdd1.c **** **            Auto initialization                          : yes
  29:../Generated_Code/TimerIntLdd1.c **** **            Event mask                                   : 
  30:../Generated_Code/TimerIntLdd1.c **** **              OnInterrupt                                : Enabled
  31:../Generated_Code/TimerIntLdd1.c **** **          CPU clock/configuration selection              : 
  32:../Generated_Code/TimerIntLdd1.c **** **            Clock configuration 0                        : This component enabled
  33:../Generated_Code/TimerIntLdd1.c **** **            Clock configuration 1                        : This component disabled
  34:../Generated_Code/TimerIntLdd1.c **** **            Clock configuration 2                        : This component disabled
  35:../Generated_Code/TimerIntLdd1.c **** **            Clock configuration 3                        : This component disabled
  36:../Generated_Code/TimerIntLdd1.c **** **            Clock configuration 4                        : This component disabled
  37:../Generated_Code/TimerIntLdd1.c **** **            Clock configuration 5                        : This component disabled
  38:../Generated_Code/TimerIntLdd1.c **** **            Clock configuration 6                        : This component disabled
  39:../Generated_Code/TimerIntLdd1.c **** **            Clock configuration 7                        : This component disabled
  40:../Generated_Code/TimerIntLdd1.c **** **          Referenced components                          : 
  41:../Generated_Code/TimerIntLdd1.c **** **            Linked TimerUnit                             : TU1
  42:../Generated_Code/TimerIntLdd1.c **** **     Contents    :
  43:../Generated_Code/TimerIntLdd1.c **** **         Init - LDD_TDeviceData* TimerIntLdd1_Init(LDD_TUserData *UserDataPtr);
  44:../Generated_Code/TimerIntLdd1.c **** **
  45:../Generated_Code/TimerIntLdd1.c **** **     Copyright : 1997 - 2013 Freescale Semiconductor, Inc. All Rights Reserved.
  46:../Generated_Code/TimerIntLdd1.c **** **     SOURCE DISTRIBUTION PERMISSIBLE as directed in End User License Agreement.
  47:../Generated_Code/TimerIntLdd1.c **** **     
  48:../Generated_Code/TimerIntLdd1.c **** **     http      : www.freescale.com
  49:../Generated_Code/TimerIntLdd1.c **** **     mail      : support@freescale.com
  50:../Generated_Code/TimerIntLdd1.c **** ** ###################################################################*/
  51:../Generated_Code/TimerIntLdd1.c **** /*!
  52:../Generated_Code/TimerIntLdd1.c **** ** @file TimerIntLdd1.c
  53:../Generated_Code/TimerIntLdd1.c **** ** @version 01.01
  54:../Generated_Code/TimerIntLdd1.c **** ** @brief
  55:../Generated_Code/TimerIntLdd1.c **** **          This TimerInt component implements a periodic interrupt.
  56:../Generated_Code/TimerIntLdd1.c **** **          When the component and its events are enabled, the "OnInterrupt"
  57:../Generated_Code/TimerIntLdd1.c **** **          event is called periodically with the period that you specify.
  58:../Generated_Code/TimerIntLdd1.c **** **          TimerInt supports also changing the period in runtime.
  59:../Generated_Code/TimerIntLdd1.c **** **          This TimerInt component provides a high level API for unified
  60:../Generated_Code/TimerIntLdd1.c **** **          hardware access to various timer devices using the TimerUnit
  61:../Generated_Code/TimerIntLdd1.c **** **          component.
  62:../Generated_Code/TimerIntLdd1.c **** */         
  63:../Generated_Code/TimerIntLdd1.c **** /*!
  64:../Generated_Code/TimerIntLdd1.c **** **  @addtogroup TimerIntLdd1_module TimerIntLdd1 module documentation
  65:../Generated_Code/TimerIntLdd1.c **** **  @{
  66:../Generated_Code/TimerIntLdd1.c **** */         
  67:../Generated_Code/TimerIntLdd1.c **** 
  68:../Generated_Code/TimerIntLdd1.c **** /* MODULE TimerIntLdd1. */
  69:../Generated_Code/TimerIntLdd1.c **** 
  70:../Generated_Code/TimerIntLdd1.c **** #include "TI1.h"
  71:../Generated_Code/TimerIntLdd1.c **** #include "TimerIntLdd1.h"
  72:../Generated_Code/TimerIntLdd1.c **** /* {Default RTOS Adapter} No RTOS includes */
  73:../Generated_Code/TimerIntLdd1.c **** 
  74:../Generated_Code/TimerIntLdd1.c **** #ifdef __cplusplus
  75:../Generated_Code/TimerIntLdd1.c **** extern "C" {
  76:../Generated_Code/TimerIntLdd1.c **** #endif 
  77:../Generated_Code/TimerIntLdd1.c **** 
  78:../Generated_Code/TimerIntLdd1.c **** typedef struct {
  79:../Generated_Code/TimerIntLdd1.c ****   LDD_TDeviceData *LinkedDeviceDataPtr;
  80:../Generated_Code/TimerIntLdd1.c ****   bool EnUser;                         /* Enable/Disable device */
  81:../Generated_Code/TimerIntLdd1.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
  82:../Generated_Code/TimerIntLdd1.c **** } TimerIntLdd1_TDeviceData;
  83:../Generated_Code/TimerIntLdd1.c **** 
  84:../Generated_Code/TimerIntLdd1.c **** typedef TimerIntLdd1_TDeviceData *TimerIntLdd1_TDeviceDataPtr; /* Pointer to the device data struct
  85:../Generated_Code/TimerIntLdd1.c **** 
  86:../Generated_Code/TimerIntLdd1.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
  87:../Generated_Code/TimerIntLdd1.c **** static TimerIntLdd1_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  88:../Generated_Code/TimerIntLdd1.c **** 
  89:../Generated_Code/TimerIntLdd1.c **** #define AVAILABLE_EVENTS_MASK (LDD_TEventMask)(LDD_TIMERINT_ON_INTERRUPT)
  90:../Generated_Code/TimerIntLdd1.c **** /* Internal method prototypes */
  91:../Generated_Code/TimerIntLdd1.c **** /*
  92:../Generated_Code/TimerIntLdd1.c **** ** ===================================================================
  93:../Generated_Code/TimerIntLdd1.c **** **     Method      :  TimerIntLdd1_Init (component TimerInt_LDD)
  94:../Generated_Code/TimerIntLdd1.c **** */
  95:../Generated_Code/TimerIntLdd1.c **** /*!
  96:../Generated_Code/TimerIntLdd1.c **** **     @brief
  97:../Generated_Code/TimerIntLdd1.c **** **         Initializes the device. Allocates memory for the device data
  98:../Generated_Code/TimerIntLdd1.c **** **         structure, allocates interrupt vectors and sets interrupt
  99:../Generated_Code/TimerIntLdd1.c **** **         priority, sets pin routing, sets timing, etc. If the
 100:../Generated_Code/TimerIntLdd1.c **** **         property ["Enable in init. code"] is set to "yes" value then
 101:../Generated_Code/TimerIntLdd1.c **** **         the device is also enabled (see the description of the
 102:../Generated_Code/TimerIntLdd1.c **** **         [Enable] method). In this case the [Enable] method is not
 103:../Generated_Code/TimerIntLdd1.c **** **         necessary and needn't to be generated. This method can be
 104:../Generated_Code/TimerIntLdd1.c **** **         called only once. Before the second call of Init the [Deinit]
 105:../Generated_Code/TimerIntLdd1.c **** **         must be called first.
 106:../Generated_Code/TimerIntLdd1.c **** **     @param
 107:../Generated_Code/TimerIntLdd1.c **** **         UserDataPtr     - Pointer to the user or
 108:../Generated_Code/TimerIntLdd1.c **** **                           RTOS specific data. This pointer will be
 109:../Generated_Code/TimerIntLdd1.c **** **                           passed as an event or callback parameter.
 110:../Generated_Code/TimerIntLdd1.c **** **     @return
 111:../Generated_Code/TimerIntLdd1.c **** **                         - Pointer to the dynamically allocated private
 112:../Generated_Code/TimerIntLdd1.c **** **                           structure or NULL if there was an error.
 113:../Generated_Code/TimerIntLdd1.c **** */
 114:../Generated_Code/TimerIntLdd1.c **** /* ===================================================================*/
 115:../Generated_Code/TimerIntLdd1.c **** LDD_TDeviceData* TimerIntLdd1_Init(LDD_TUserData *UserDataPtr)
 116:../Generated_Code/TimerIntLdd1.c **** {
  32              		.loc 1 116 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 84B0     		sub	sp, sp, #16
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
 117:../Generated_Code/TimerIntLdd1.c ****   /* Allocate device structure */
 118:../Generated_Code/TimerIntLdd1.c ****   TimerIntLdd1_TDeviceData *DeviceDataPrv;
 119:../Generated_Code/TimerIntLdd1.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 120:../Generated_Code/TimerIntLdd1.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  46              		.loc 1 120 0
  47 0008 0F4B     		ldr	r3, .L4
  48 000a FB60     		str	r3, [r7, #12]
 121:../Generated_Code/TimerIntLdd1.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  49              		.loc 1 121 0
  50 000c FB68     		ldr	r3, [r7, #12]
  51 000e 7A68     		ldr	r2, [r7, #4]
  52 0010 9A60     		str	r2, [r3, #8]
 122:../Generated_Code/TimerIntLdd1.c ****   DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
  53              		.loc 1 122 0
  54 0012 FB68     		ldr	r3, [r7, #12]
  55 0014 0122     		mov	r2, #1
  56 0016 1A71     		strb	r2, [r3, #4]
 123:../Generated_Code/TimerIntLdd1.c ****   /* Registration of the device structure */
 124:../Generated_Code/TimerIntLdd1.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TimerIntLdd1_ID,DeviceDataPrv);
  57              		.loc 1 124 0
  58 0018 0C4B     		ldr	r3, .L4+4
  59 001a FA68     		ldr	r2, [r7, #12]
  60 001c DA60     		str	r2, [r3, #12]
 125:../Generated_Code/TimerIntLdd1.c ****   DeviceDataPrv->LinkedDeviceDataPtr = TU1_Init((LDD_TUserData *)NULL);
  61              		.loc 1 125 0
  62 001e 0020     		mov	r0, #0
  63 0020 FFF7FEFF 		bl	TU1_Init
  64 0024 021C     		mov	r2, r0
  65 0026 FB68     		ldr	r3, [r7, #12]
  66 0028 1A60     		str	r2, [r3]
 126:../Generated_Code/TimerIntLdd1.c ****   if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful?
  67              		.loc 1 126 0
  68 002a FB68     		ldr	r3, [r7, #12]
  69 002c 1B68     		ldr	r3, [r3]
  70 002e 002B     		cmp	r3, #0
  71 0030 04D1     		bne	.L2
 127:../Generated_Code/TimerIntLdd1.c ****     /* Unregistration of the device structure */
 128:../Generated_Code/TimerIntLdd1.c ****     PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_TimerIntLdd1_ID);
  72              		.loc 1 128 0
  73 0032 064B     		ldr	r3, .L4+4
  74 0034 0022     		mov	r2, #0
  75 0036 DA60     		str	r2, [r3, #12]
 129:../Generated_Code/TimerIntLdd1.c ****     /* Deallocation of the device structure */
 130:../Generated_Code/TimerIntLdd1.c ****     /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deall
 131:../Generated_Code/TimerIntLdd1.c ****     return NULL;                       /* If so, then the TimerInt initialization is also unsuccess
  76              		.loc 1 131 0
  77 0038 0023     		mov	r3, #0
  78 003a 00E0     		b	.L3
  79              	.L2:
 132:../Generated_Code/TimerIntLdd1.c ****   }
 133:../Generated_Code/TimerIntLdd1.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  80              		.loc 1 133 0
  81 003c FB68     		ldr	r3, [r7, #12]
  82              	.L3:
 134:../Generated_Code/TimerIntLdd1.c **** }
  83              		.loc 1 134 0
  84 003e 181C     		mov	r0, r3
  85 0040 BD46     		mov	sp, r7
  86 0042 04B0     		add	sp, sp, #16
  87              		@ sp needed for prologue
  88 0044 80BD     		pop	{r7, pc}
  89              	.L5:
  90 0046 C046     		.align	2
  91              	.L4:
  92 0048 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
  93 004c 00000000 		.word	PE_LDD_DeviceDataList
  94              		.cfi_endproc
  95              	.LFE0:
  97              		.section	.text.TU1_OnCounterRestart,"ax",%progbits
  98              		.align	2
  99              		.global	TU1_OnCounterRestart
 100              		.code	16
 101              		.thumb_func
 103              	TU1_OnCounterRestart:
 104              	.LFB1:
 135:../Generated_Code/TimerIntLdd1.c **** 
 136:../Generated_Code/TimerIntLdd1.c **** /*
 137:../Generated_Code/TimerIntLdd1.c **** ** ===================================================================
 138:../Generated_Code/TimerIntLdd1.c **** **     Method      :  TU1_OnCounterRestart (component TimerInt_LDD)
 139:../Generated_Code/TimerIntLdd1.c **** **
 140:../Generated_Code/TimerIntLdd1.c **** **     Description :
 141:../Generated_Code/TimerIntLdd1.c **** **         The method services the event of the linked component TU1 and 
 142:../Generated_Code/TimerIntLdd1.c **** **         eventually invokes event TimerIntLdd1_OnInterrupt.
 143:../Generated_Code/TimerIntLdd1.c **** **         This method is internal. It is used by Processor Expert only.
 144:../Generated_Code/TimerIntLdd1.c **** ** ===================================================================
 145:../Generated_Code/TimerIntLdd1.c **** */
 146:../Generated_Code/TimerIntLdd1.c **** void TU1_OnCounterRestart(LDD_TUserData *UserDataPtr)
 147:../Generated_Code/TimerIntLdd1.c **** {
 105              		.loc 1 147 0
 106              		.cfi_startproc
 107 0000 80B5     		push	{r7, lr}
 108              	.LCFI3:
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 84B0     		sub	sp, sp, #16
 113              	.LCFI4:
 114              		.cfi_def_cfa_offset 24
 115 0004 00AF     		add	r7, sp, #0
 116              	.LCFI5:
 117              		.cfi_def_cfa_register 7
 118 0006 7860     		str	r0, [r7, #4]
 148:../Generated_Code/TimerIntLdd1.c ****   TimerIntLdd1_TDeviceData *DeviceDataPrv = PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TimerIntLdd1_ID]
 119              		.loc 1 148 0
 120 0008 054B     		ldr	r3, .L7
 121 000a DB68     		ldr	r3, [r3, #12]
 122 000c FB60     		str	r3, [r7, #12]
 149:../Generated_Code/TimerIntLdd1.c **** 
 150:../Generated_Code/TimerIntLdd1.c ****   (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning *
 151:../Generated_Code/TimerIntLdd1.c ****   TimerIntLdd1_OnInterrupt(DeviceDataPrv->UserDataPtr); /* Invoke OnInterrupt event */
 123              		.loc 1 151 0
 124 000e FB68     		ldr	r3, [r7, #12]
 125 0010 9B68     		ldr	r3, [r3, #8]
 126 0012 181C     		mov	r0, r3
 127 0014 FFF7FEFF 		bl	TimerIntLdd1_OnInterrupt
 152:../Generated_Code/TimerIntLdd1.c **** }
 128              		.loc 1 152 0
 129 0018 BD46     		mov	sp, r7
 130 001a 04B0     		add	sp, sp, #16
 131              		@ sp needed for prologue
 132 001c 80BD     		pop	{r7, pc}
 133              	.L8:
 134 001e C046     		.align	2
 135              	.L7:
 136 0020 00000000 		.word	PE_LDD_DeviceDataList
 137              		.cfi_endproc
 138              	.LFE1:
 140              		.text
 141              	.Letext0:
 142              		.file 2 "../Generated_Code/PE_Types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TimerIntLdd1.c
C:\Users\lab\AppData\Local\Temp\ccmUJyRb.s:18     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\lab\AppData\Local\Temp\ccmUJyRb.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\lab\AppData\Local\Temp\ccmUJyRb.s:24     .text.TimerIntLdd1_Init:00000000 $t
C:\Users\lab\AppData\Local\Temp\ccmUJyRb.s:29     .text.TimerIntLdd1_Init:00000000 TimerIntLdd1_Init
C:\Users\lab\AppData\Local\Temp\ccmUJyRb.s:92     .text.TimerIntLdd1_Init:00000048 $d
C:\Users\lab\AppData\Local\Temp\ccmUJyRb.s:98     .text.TU1_OnCounterRestart:00000000 $t
C:\Users\lab\AppData\Local\Temp\ccmUJyRb.s:103    .text.TU1_OnCounterRestart:00000000 TU1_OnCounterRestart
C:\Users\lab\AppData\Local\Temp\ccmUJyRb.s:136    .text.TU1_OnCounterRestart:00000020 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TU1_Init
PE_LDD_DeviceDataList
TimerIntLdd1_OnInterrupt

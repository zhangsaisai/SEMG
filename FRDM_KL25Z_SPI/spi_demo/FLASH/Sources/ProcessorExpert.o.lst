   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ProcessorExpert.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SlaveReceivedFlg
  18              		.section	.bss.SlaveReceivedFlg,"aw",%nobits
  21              	SlaveReceivedFlg:
  22 0000 00       		.space	1
  23              		.global	MasterReceivedFlg
  24              		.section	.bss.MasterReceivedFlg,"aw",%nobits
  27              	MasterReceivedFlg:
  28 0000 00       		.space	1
  29              		.global	master_send
  30              		.section	.bss.master_send,"aw",%nobits
  31              		.align	2
  34              	master_send:
  35 0000 00000000 		.space	14
  35      00000000 
  35      00000000 
  35      0000
  36              		.global	slave_send
  37 000e 0000     		.section	.bss.slave_send,"aw",%nobits
  38              		.align	2
  41              	slave_send:
  42 0000 00000000 		.space	14
  42      00000000 
  42      00000000 
  42      0000
  43              		.global	master_receive
  44 000e 0000     		.section	.bss.master_receive,"aw",%nobits
  45              		.align	2
  48              	master_receive:
  49 0000 00000000 		.space	14
  49      00000000 
  49      00000000 
  49      0000
  50              		.global	slave_receive
  51 000e 0000     		.section	.bss.slave_receive,"aw",%nobits
  52              		.align	2
  55              	slave_receive:
  56 0000 00000000 		.space	14
  56      00000000 
  56      00000000 
  56      0000
  57 000e 0000     		.section	.rodata
  58              		.align	2
  59              	.LC0:
  60 0000 0A00     		.ascii	"\012\000"
  61 0002 0000     		.align	2
  62              	.LC2:
  63 0004 2A2A2A2A 		.ascii	"***************************************************"
  63      2A2A2A2A 
  63      2A2A2A2A 
  63      2A2A2A2A 
  63      2A2A2A2A 
  64 0037 2A2A2A2A 		.ascii	"*****\000"
  64      2A00
  65 003d 000000   		.align	2
  66              	.LC4:
  67 0040 2A202020 		.ascii	"*                                                  "
  67      20202020 
  67      20202020 
  67      20202020 
  67      20202020 
  68 0073 20202020 		.ascii	"     \000"
  68      2000
  69 0079 000000   		.align	2
  70              	.LC6:
  71 007c 2A205275 		.ascii	"* Running SPI Demo, Master & Slave exchanged messag"
  71      6E6E696E 
  71      67205350 
  71      49204465 
  71      6D6F2C20 
  72 00af 65732020 		.ascii	"es   \000"
  72      2000
  73 00b5 000000   		.align	2
  74              	.LC8:
  75 00b8 2A204265 		.ascii	"* Before continuing connect SPI0(Master)         \000"
  75      666F7265 
  75      20636F6E 
  75      74696E75 
  75      696E6720 
  76 00ea 0000     		.align	2
  77              	.LC10:
  78 00ec 2A20746F 		.ascii	"* to SPI1 (Slave) as outlined below              \000"
  78      20535049 
  78      31202853 
  78      6C617665 
  78      29206173 
  79 011e 0000     		.align	2
  80              	.LC12:
  81 0120 2A202020 		.ascii	"*                                                \000"
  81      20202020 
  81      20202020 
  81      20202020 
  81      20202020 
  82 0152 0000     		.align	2
  83              	.LC14:
  84 0154 2A204D4F 		.ascii	"* MOSI:  PTA17 (J2 pin 11) to PTE1 (J2 pin 20)   \000"
  84      53493A20 
  84      20505441 
  84      31372028 
  84      4A322070 
  85 0186 0000     		.align	2
  86              	.LC16:
  87 0188 2A204D49 		.ascii	"* MISO:  PTA16 (J2 pin  9) to PTE3 (J9 pin 11)   \000"
  87      534F3A20 
  87      20505441 
  87      31362028 
  87      4A322070 
  88 01ba 0000     		.align	2
  89              	.LC18:
  90 01bc 2A205343 		.ascii	"* SCK:   PTC5  (J1 pin  9) to PTE2 (J9 pin  9)   \000"
  90      4B3A2020 
  90      20505443 
  90      35202028 
  90      4A312070 
  91 01ee 0000     		.align	2
  92              	.LC20:
  93 01f0 2A205043 		.ascii	"* PCS0:  PTC4  (J1 pin  7) to PTE4 (J9 pin 13)   \000"
  93      53303A20 
  93      20505443 
  93      34202028 
  93      4A312070 
  94 0222 0000     		.align	2
  95              	.LC22:
  96 0224 2A205468 		.ascii	"* Then enter any key to continue                 \000"
  96      656E2065 
  96      6E746572 
  96      20616E79 
  96      206B6579 
  97 0256 0000     		.align	2
  98              	.LC26:
  99 0258 0A0A4D61 		.ascii	"\012\012Master: Send command start...\000"
  99      73746572 
  99      3A205365 
  99      6E642063 
  99      6F6D6D61 
 100              		.section	.text.main,"ax",%progbits
 101              		.align	2
 102              		.global	main
 103              		.code	16
 104              		.thumb_func
 106              	main:
 107              	.LFB0:
 108              		.file 1 "../Sources/ProcessorExpert.c"
   1:../Sources/ProcessorExpert.c **** /** ###################################################################
   2:../Sources/ProcessorExpert.c **** **     Filename    : ProcessorExpert.c
   3:../Sources/ProcessorExpert.c **** **     Project     : ProcessorExpert
   4:../Sources/ProcessorExpert.c **** **     Processor   : MKL25Z128VLK4
   5:../Sources/ProcessorExpert.c **** **     Version     : Driver 01.01
   6:../Sources/ProcessorExpert.c **** **     Compiler    : GNU C Compiler
   7:../Sources/ProcessorExpert.c **** **     Date/Time   : 2012-08-08, 16:59, # CodeGen: 0
   8:../Sources/ProcessorExpert.c **** **     Abstract    :
   9:../Sources/ProcessorExpert.c **** **         Main module.
  10:../Sources/ProcessorExpert.c **** **         This module contains user's application code.
  11:../Sources/ProcessorExpert.c **** **     Settings    :
  12:../Sources/ProcessorExpert.c **** **     Contents    :
  13:../Sources/ProcessorExpert.c **** **         No public methods
  14:../Sources/ProcessorExpert.c **** **
  15:../Sources/ProcessorExpert.c **** ** ###################################################################*/
  16:../Sources/ProcessorExpert.c **** /* MODULE ProcessorExpert */
  17:../Sources/ProcessorExpert.c **** 
  18:../Sources/ProcessorExpert.c **** 
  19:../Sources/ProcessorExpert.c **** /* Including needed modules to compile this module/procedure */
  20:../Sources/ProcessorExpert.c **** #include "Cpu.h"
  21:../Sources/ProcessorExpert.c **** #include "Events.h"
  22:../Sources/ProcessorExpert.c **** #include "Blue_LED.h"
  23:../Sources/ProcessorExpert.c **** #include "Green_LED.h"
  24:../Sources/ProcessorExpert.c **** #include "Red_LED.h"
  25:../Sources/ProcessorExpert.c **** #include "CsIO1.h"
  26:../Sources/ProcessorExpert.c **** #include "IO1.h"
  27:../Sources/ProcessorExpert.c **** #include "SM1.h"
  28:../Sources/ProcessorExpert.c **** #include "SS1.h"
  29:../Sources/ProcessorExpert.c **** /* Including shared modules, which are used for whole project */
  30:../Sources/ProcessorExpert.c **** #include "PE_Types.h"
  31:../Sources/ProcessorExpert.c **** #include "PE_Error.h"
  32:../Sources/ProcessorExpert.c **** #include "PE_Const.h"
  33:../Sources/ProcessorExpert.c **** #include "IO_Map.h"
  34:../Sources/ProcessorExpert.c **** 
  35:../Sources/ProcessorExpert.c **** /* User includes (#include below this line is not maintained by Processor Expert) */
  36:../Sources/ProcessorExpert.c **** #include "stdio.h"
  37:../Sources/ProcessorExpert.c **** #include <string.h>
  38:../Sources/ProcessorExpert.c **** 
  39:../Sources/ProcessorExpert.c **** /* Global Variables */
  40:../Sources/ProcessorExpert.c **** #define COMM_SIZE 1
  41:../Sources/ProcessorExpert.c **** #define DATA_SIZE 14
  42:../Sources/ProcessorExpert.c **** 
  43:../Sources/ProcessorExpert.c **** volatile bool SlaveReceivedFlg = FALSE;
  44:../Sources/ProcessorExpert.c **** volatile bool MasterReceivedFlg = FALSE;
  45:../Sources/ProcessorExpert.c **** 
  46:../Sources/ProcessorExpert.c **** char master_send[14]    = {0};
  47:../Sources/ProcessorExpert.c **** char slave_send[14]     = {0};
  48:../Sources/ProcessorExpert.c **** char master_receive[14] = {0};
  49:../Sources/ProcessorExpert.c **** char slave_receive[14]  = {0};
  50:../Sources/ProcessorExpert.c **** 
  51:../Sources/ProcessorExpert.c **** int main(void)
  52:../Sources/ProcessorExpert.c **** {
 109              		.loc 1 52 0
 110              		.cfi_startproc
 111 0000 80B5     		push	{r7, lr}
 112              	.LCFI0:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 82B0     		sub	sp, sp, #8
 117              	.LCFI1:
 118              		.cfi_def_cfa_offset 16
 119 0004 00AF     		add	r7, sp, #0
 120              	.LCFI2:
 121              		.cfi_def_cfa_register 7
  53:../Sources/ProcessorExpert.c ****   /* Write your local variable definition here */
  54:../Sources/ProcessorExpert.c ****   uint32 i = 0;
 122              		.loc 1 54 0
 123 0006 0023     		mov	r3, #0
 124 0008 7B60     		str	r3, [r7, #4]
  55:../Sources/ProcessorExpert.c **** 
  56:../Sources/ProcessorExpert.c ****   /*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
  57:../Sources/ProcessorExpert.c ****   PE_low_level_init();
 125              		.loc 1 57 0
 126 000a FFF7FEFF 		bl	PE_low_level_init
  58:../Sources/ProcessorExpert.c ****   /*** End of Processor Expert internal initialization.                    ***/
  59:../Sources/ProcessorExpert.c **** 
  60:../Sources/ProcessorExpert.c ****   /* Write your code here */
  61:../Sources/ProcessorExpert.c ****   
  62:../Sources/ProcessorExpert.c ****  printf ("\n\n");  
 127              		.loc 1 62 0
 128 000e 424B     		ldr	r3, .L7
 129 0010 181C     		mov	r0, r3
 130 0012 FFF7FEFF 		bl	puts
  63:../Sources/ProcessorExpert.c ****  printf("********************************************************\n");
 131              		.loc 1 63 0
 132 0016 414B     		ldr	r3, .L7+4
 133 0018 181C     		mov	r0, r3
 134 001a FFF7FEFF 		bl	puts
  64:../Sources/ProcessorExpert.c ****  printf("*                                                       \n");
 135              		.loc 1 64 0
 136 001e 404B     		ldr	r3, .L7+8
 137 0020 181C     		mov	r0, r3
 138 0022 FFF7FEFF 		bl	puts
  65:../Sources/ProcessorExpert.c ****  printf("* Running SPI Demo, Master & Slave exchanged messages   \n");
 139              		.loc 1 65 0
 140 0026 3F4B     		ldr	r3, .L7+12
 141 0028 181C     		mov	r0, r3
 142 002a FFF7FEFF 		bl	puts
  66:../Sources/ProcessorExpert.c ****  printf("* Before continuing connect SPI0(Master)         \n");
 143              		.loc 1 66 0
 144 002e 3E4B     		ldr	r3, .L7+16
 145 0030 181C     		mov	r0, r3
 146 0032 FFF7FEFF 		bl	puts
  67:../Sources/ProcessorExpert.c ****  printf("* to SPI1 (Slave) as outlined below              \n"); 
 147              		.loc 1 67 0
 148 0036 3D4B     		ldr	r3, .L7+20
 149 0038 181C     		mov	r0, r3
 150 003a FFF7FEFF 		bl	puts
  68:../Sources/ProcessorExpert.c ****  printf("*                                                \n"); 
 151              		.loc 1 68 0
 152 003e 3C4B     		ldr	r3, .L7+24
 153 0040 181C     		mov	r0, r3
 154 0042 FFF7FEFF 		bl	puts
  69:../Sources/ProcessorExpert.c ****  printf("* MOSI:  PTA17 (J2 pin 11) to PTE1 (J2 pin 20)   \n");
 155              		.loc 1 69 0
 156 0046 3B4B     		ldr	r3, .L7+28
 157 0048 181C     		mov	r0, r3
 158 004a FFF7FEFF 		bl	puts
  70:../Sources/ProcessorExpert.c ****  printf("* MISO:  PTA16 (J2 pin  9) to PTE3 (J9 pin 11)   \n");
 159              		.loc 1 70 0
 160 004e 3A4B     		ldr	r3, .L7+32
 161 0050 181C     		mov	r0, r3
 162 0052 FFF7FEFF 		bl	puts
  71:../Sources/ProcessorExpert.c ****  printf("* SCK:   PTC5  (J1 pin  9) to PTE2 (J9 pin  9)   \n");
 163              		.loc 1 71 0
 164 0056 394B     		ldr	r3, .L7+36
 165 0058 181C     		mov	r0, r3
 166 005a FFF7FEFF 		bl	puts
  72:../Sources/ProcessorExpert.c ****  printf("* PCS0:  PTC4  (J1 pin  7) to PTE4 (J9 pin 13)   \n");
 167              		.loc 1 72 0
 168 005e 384B     		ldr	r3, .L7+40
 169 0060 181C     		mov	r0, r3
 170 0062 FFF7FEFF 		bl	puts
  73:../Sources/ProcessorExpert.c ****  printf("*                                                \n");
 171              		.loc 1 73 0
 172 0066 324B     		ldr	r3, .L7+24
 173 0068 181C     		mov	r0, r3
 174 006a FFF7FEFF 		bl	puts
  74:../Sources/ProcessorExpert.c ****  printf("* Then enter any key to continue                 \n");
 175              		.loc 1 74 0
 176 006e 354B     		ldr	r3, .L7+44
 177 0070 181C     		mov	r0, r3
 178 0072 FFF7FEFF 		bl	puts
  75:../Sources/ProcessorExpert.c ****  printf("*                                                \n");
 179              		.loc 1 75 0
 180 0076 2E4B     		ldr	r3, .L7+24
 181 0078 181C     		mov	r0, r3
 182 007a FFF7FEFF 		bl	puts
  76:../Sources/ProcessorExpert.c ****  printf("********************************************************\n");
 183              		.loc 1 76 0
 184 007e 274B     		ldr	r3, .L7+4
 185 0080 181C     		mov	r0, r3
 186 0082 FFF7FEFF 		bl	puts
  77:../Sources/ProcessorExpert.c ****  printf ("\n\n");
 187              		.loc 1 77 0
 188 0086 244B     		ldr	r3, .L7
 189 0088 181C     		mov	r0, r3
 190 008a FFF7FEFF 		bl	puts
  78:../Sources/ProcessorExpert.c ****   
  79:../Sources/ProcessorExpert.c ****   /* BLUE LED ON */ 
  80:../Sources/ProcessorExpert.c ****   Blue_LED_ClrVal(Blue_LED_DeviceData);   
 191              		.loc 1 80 0
 192 008e 2E4B     		ldr	r3, .L7+48
 193 0090 1B68     		ldr	r3, [r3]
 194 0092 181C     		mov	r0, r3
 195 0094 FFF7FEFF 		bl	Blue_LED_ClrVal
  81:../Sources/ProcessorExpert.c ****   
  82:../Sources/ProcessorExpert.c ****   /* Slave sends dummy message and waits for receiving some message from master*/
  83:../Sources/ProcessorExpert.c ****   //SS1_SendBlock(SS1_DeviceData, slave_send, COMM_SIZE);
  84:../Sources/ProcessorExpert.c ****   SS1_ReceiveBlock(SS1_DeviceData, slave_receive, COMM_SIZE); 
 196              		.loc 1 84 0
 197 0098 2B4B     		ldr	r3, .L7+48
 198 009a 5A69     		ldr	r2, [r3, #20]
 199 009c 2B4B     		ldr	r3, .L7+52
 200 009e 101C     		mov	r0, r2
 201 00a0 191C     		mov	r1, r3
 202 00a2 0122     		mov	r2, #1
 203 00a4 FFF7FEFF 		bl	SS1_ReceiveBlock
 204              	.L6:
  85:../Sources/ProcessorExpert.c **** 
  86:../Sources/ProcessorExpert.c ****   for(;;){
  87:../Sources/ProcessorExpert.c ****  
  88:../Sources/ProcessorExpert.c ****   /* Master sends message 1  */ 
  89:../Sources/ProcessorExpert.c ****   printf("\n\nMaster: Send command start...\n");   
 205              		.loc 1 89 0
 206 00a8 294B     		ldr	r3, .L7+56
 207 00aa 181C     		mov	r0, r3
 208 00ac FFF7FEFF 		bl	puts
  90:../Sources/ProcessorExpert.c ****   master_send[0] = 0x01;  
 209              		.loc 1 90 0
 210 00b0 284B     		ldr	r3, .L7+60
 211 00b2 0122     		mov	r2, #1
 212 00b4 1A70     		strb	r2, [r3]
  91:../Sources/ProcessorExpert.c ****   SM1_SendBlock(SM1_DeviceData, master_send, COMM_SIZE);   
 213              		.loc 1 91 0
 214 00b6 244B     		ldr	r3, .L7+48
 215 00b8 1A69     		ldr	r2, [r3, #16]
 216 00ba 264B     		ldr	r3, .L7+60
 217 00bc 101C     		mov	r0, r2
 218 00be 191C     		mov	r1, r3
 219 00c0 0122     		mov	r2, #1
 220 00c2 FFF7FEFF 		bl	SM1_SendBlock
  92:../Sources/ProcessorExpert.c ****   //SM1_ReceiveBlock(SM1_DeviceData, master_receive_comm, COMM_SIZE);
  93:../Sources/ProcessorExpert.c ****   
  94:../Sources/ProcessorExpert.c ****    /* waiting for transferring completed  */ 
  95:../Sources/ProcessorExpert.c ****   //MasterReceivedFlg = FALSE;
  96:../Sources/ProcessorExpert.c ****   //while(!MasterReceivedFlg); 
  97:../Sources/ProcessorExpert.c ****    
  98:../Sources/ProcessorExpert.c ****   for(i=0;i<1000;i++){} //Delay
 221              		.loc 1 98 0
 222 00c6 0023     		mov	r3, #0
 223 00c8 7B60     		str	r3, [r7, #4]
 224 00ca 02E0     		b	.L2
 225              	.L3:
 226              		.loc 1 98 0 is_stmt 0
 227 00cc 7B68     		ldr	r3, [r7, #4]
 228 00ce 0133     		add	r3, r3, #1
 229 00d0 7B60     		str	r3, [r7, #4]
 230              	.L2:
 231              		.loc 1 98 0
 232 00d2 7A68     		ldr	r2, [r7, #4]
 233 00d4 204B     		ldr	r3, .L7+64
 234 00d6 9A42     		cmp	r2, r3
 235 00d8 F8D9     		bls	.L3
  99:../Sources/ProcessorExpert.c ****   
 100:../Sources/ProcessorExpert.c ****   /* Master sends dummy message to receive response from slave */
 101:../Sources/ProcessorExpert.c ****   master_send[0] = 0x03; 
 236              		.loc 1 101 0 is_stmt 1
 237 00da 1E4B     		ldr	r3, .L7+60
 238 00dc 0322     		mov	r2, #3
 239 00de 1A70     		strb	r2, [r3]
 102:../Sources/ProcessorExpert.c ****   SM1_SendBlock(SM1_DeviceData, master_send, DATA_SIZE);   
 240              		.loc 1 102 0
 241 00e0 194B     		ldr	r3, .L7+48
 242 00e2 1A69     		ldr	r2, [r3, #16]
 243 00e4 1B4B     		ldr	r3, .L7+60
 244 00e6 101C     		mov	r0, r2
 245 00e8 191C     		mov	r1, r3
 246 00ea 0E22     		mov	r2, #14
 247 00ec FFF7FEFF 		bl	SM1_SendBlock
 103:../Sources/ProcessorExpert.c ****   SM1_ReceiveBlock(SM1_DeviceData, master_receive, DATA_SIZE);
 248              		.loc 1 103 0
 249 00f0 154B     		ldr	r3, .L7+48
 250 00f2 1A69     		ldr	r2, [r3, #16]
 251 00f4 194B     		ldr	r3, .L7+68
 252 00f6 101C     		mov	r0, r2
 253 00f8 191C     		mov	r1, r3
 254 00fa 0E22     		mov	r2, #14
 255 00fc FFF7FEFF 		bl	SM1_ReceiveBlock
 104:../Sources/ProcessorExpert.c ****    
 105:../Sources/ProcessorExpert.c ****    /* waiting for transferring completed  */  
 106:../Sources/ProcessorExpert.c ****   //MasterReceivedFlg = FALSE;
 107:../Sources/ProcessorExpert.c ****   //while(!MasterReceivedFlg);   
 108:../Sources/ProcessorExpert.c ****         
 109:../Sources/ProcessorExpert.c ****   for(i=0;i<1000000;i++){} //Delay
 256              		.loc 1 109 0
 257 0100 0023     		mov	r3, #0
 258 0102 7B60     		str	r3, [r7, #4]
 259 0104 02E0     		b	.L4
 260              	.L5:
 261              		.loc 1 109 0 is_stmt 0
 262 0106 7B68     		ldr	r3, [r7, #4]
 263 0108 0133     		add	r3, r3, #1
 264 010a 7B60     		str	r3, [r7, #4]
 265              	.L4:
 266              		.loc 1 109 0
 267 010c 7A68     		ldr	r2, [r7, #4]
 268 010e 144B     		ldr	r3, .L7+72
 269 0110 9A42     		cmp	r2, r3
 270 0112 F8D9     		bls	.L5
 110:../Sources/ProcessorExpert.c ****    }
 271              		.loc 1 110 0 is_stmt 1
 272 0114 C8E7     		b	.L6
 273              	.L8:
 274 0116 C046     		.align	2
 275              	.L7:
 276 0118 00000000 		.word	.LC0
 277 011c 04000000 		.word	.LC2
 278 0120 40000000 		.word	.LC4
 279 0124 7C000000 		.word	.LC6
 280 0128 B8000000 		.word	.LC8
 281 012c EC000000 		.word	.LC10
 282 0130 20010000 		.word	.LC12
 283 0134 54010000 		.word	.LC14
 284 0138 88010000 		.word	.LC16
 285 013c BC010000 		.word	.LC18
 286 0140 F0010000 		.word	.LC20
 287 0144 24020000 		.word	.LC22
 288 0148 00000000 		.word	PE_LDD_DeviceDataList
 289 014c 00000000 		.word	slave_receive
 290 0150 58020000 		.word	.LC26
 291 0154 00000000 		.word	master_send
 292 0158 E7030000 		.word	999
 293 015c 00000000 		.word	master_receive
 294 0160 3F420F00 		.word	999999
 295              		.cfi_endproc
 296              	.LFE0:
 298              		.text
 299              	.Letext0:
 300              		.file 2 "D:/kuaipan/SEMG/FRDM_KL25Z_SPI/spi_demo/Generated_Code/PE_Types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ProcessorExpert.c
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:21     .bss.SlaveReceivedFlg:00000000 SlaveReceivedFlg
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:22     .bss.SlaveReceivedFlg:00000000 $d
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:27     .bss.MasterReceivedFlg:00000000 MasterReceivedFlg
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:28     .bss.MasterReceivedFlg:00000000 $d
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:34     .bss.master_send:00000000 master_send
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:31     .bss.master_send:00000000 $d
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:41     .bss.slave_send:00000000 slave_send
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:38     .bss.slave_send:00000000 $d
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:48     .bss.master_receive:00000000 master_receive
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:45     .bss.master_receive:00000000 $d
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:55     .bss.slave_receive:00000000 slave_receive
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:52     .bss.slave_receive:00000000 $d
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:58     .rodata:00000000 $d
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:101    .text.main:00000000 $t
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:106    .text.main:00000000 main
C:\Users\lab\AppData\Local\Temp\cciaqUZ9.s:276    .text.main:00000118 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_low_level_init
puts
Blue_LED_ClrVal
SS1_ReceiveBlock
SM1_SendBlock
SM1_ReceiveBlock
PE_LDD_DeviceDataList

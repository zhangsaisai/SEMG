   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CS.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	4
  23              		.section	.bss.INT_PORTE__DEFAULT_RTOS_ISRPARAM,"aw",%nobits
  24              		.align	2
  27              	INT_PORTE__DEFAULT_RTOS_ISRPARAM:
  28 0000 00000000 		.space	4
  29              		.section	.text.CS_Init,"ax",%progbits
  30              		.align	2
  31              		.global	CS_Init
  32              		.code	16
  33              		.thumb_func
  35              	CS_Init:
  36              	.LFB0:
  37              		.file 1 "../Generated_Code/CS.c"
   1:../Generated_Code/CS.c **** /* ###################################################################
   2:../Generated_Code/CS.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/CS.c **** **     Filename    : CS.c
   4:../Generated_Code/CS.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/CS.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/CS.c **** **     Component   : ExtInt_LDD
   7:../Generated_Code/CS.c **** **     Version     : Component 02.156, Driver 01.02, CPU db: 3.00.000
   8:../Generated_Code/CS.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/CS.c **** **     Date/Time   : 2015-10-17, 21:25, # CodeGen: 17
  10:../Generated_Code/CS.c **** **     Abstract    :
  11:../Generated_Code/CS.c **** **         This component, "ExtInt_LDD", provide a low level API 
  12:../Generated_Code/CS.c **** **         for unified access of external interrupts handling
  13:../Generated_Code/CS.c **** **         across various device designs.
  14:../Generated_Code/CS.c **** **         The component uses one pin which generates interrupt on 
  15:../Generated_Code/CS.c **** **         selected edge.
  16:../Generated_Code/CS.c **** **     Settings    :
  17:../Generated_Code/CS.c **** **          Component name                                 : CS
  18:../Generated_Code/CS.c **** **          Pin                                            : PTD4/LLWU_P14/SPI1_PCS0/UART2_RX/TPM0_
  19:../Generated_Code/CS.c **** **          Pin signal                                     : 
  20:../Generated_Code/CS.c **** **          Generate interrupt on                          : falling edge
  21:../Generated_Code/CS.c **** **          Interrupt                                      : INT_PORTE
  22:../Generated_Code/CS.c **** **          Interrupt priority                             : medium priority
  23:../Generated_Code/CS.c **** **          Initialization                                 : 
  24:../Generated_Code/CS.c **** **            Enabled in init. code                        : yes
  25:../Generated_Code/CS.c **** **            Auto initialization                          : yes
  26:../Generated_Code/CS.c **** **          Threshold level                                : 0
  27:../Generated_Code/CS.c **** **     Contents    :
  28:../Generated_Code/CS.c **** **         Init - LDD_TDeviceData* CS_Init(LDD_TUserData *UserDataPtr);
  29:../Generated_Code/CS.c **** **
  30:../Generated_Code/CS.c **** **     Copyright : 1997 - 2013 Freescale Semiconductor, Inc. All Rights Reserved.
  31:../Generated_Code/CS.c **** **     SOURCE DISTRIBUTION PERMISSIBLE as directed in End User License Agreement.
  32:../Generated_Code/CS.c **** **     
  33:../Generated_Code/CS.c **** **     http      : www.freescale.com
  34:../Generated_Code/CS.c **** **     mail      : support@freescale.com
  35:../Generated_Code/CS.c **** ** ###################################################################*/
  36:../Generated_Code/CS.c **** /*!
  37:../Generated_Code/CS.c **** ** @file CS.c
  38:../Generated_Code/CS.c **** ** @version 01.02
  39:../Generated_Code/CS.c **** ** @brief
  40:../Generated_Code/CS.c **** **         This component, "ExtInt_LDD", provide a low level API 
  41:../Generated_Code/CS.c **** **         for unified access of external interrupts handling
  42:../Generated_Code/CS.c **** **         across various device designs.
  43:../Generated_Code/CS.c **** **         The component uses one pin which generates interrupt on 
  44:../Generated_Code/CS.c **** **         selected edge.
  45:../Generated_Code/CS.c **** */         
  46:../Generated_Code/CS.c **** /*!
  47:../Generated_Code/CS.c **** **  @addtogroup CS_module CS module documentation
  48:../Generated_Code/CS.c **** **  @{
  49:../Generated_Code/CS.c **** */         
  50:../Generated_Code/CS.c **** 
  51:../Generated_Code/CS.c **** /* MODULE CS. */
  52:../Generated_Code/CS.c **** 
  53:../Generated_Code/CS.c **** #include "Events.h"
  54:../Generated_Code/CS.c **** #include "CS.h"
  55:../Generated_Code/CS.c **** /* {Default RTOS Adapter} No RTOS includes */
  56:../Generated_Code/CS.c **** 
  57:../Generated_Code/CS.c **** #ifdef __cplusplus
  58:../Generated_Code/CS.c **** extern "C" {
  59:../Generated_Code/CS.c **** #endif 
  60:../Generated_Code/CS.c **** 
  61:../Generated_Code/CS.c **** typedef struct {
  62:../Generated_Code/CS.c ****   LDD_TUserData *UserData;             /* RTOS device data structure */
  63:../Generated_Code/CS.c **** } CS_TDeviceData, *CS_TDeviceDataPtr;  /* Device data structure type */
  64:../Generated_Code/CS.c **** 
  65:../Generated_Code/CS.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
  66:../Generated_Code/CS.c **** static CS_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  67:../Generated_Code/CS.c **** /* {Default RTOS Adapter} Global variable used for passing a parameter into ISR */
  68:../Generated_Code/CS.c **** static CS_TDeviceData * INT_PORTE__DEFAULT_RTOS_ISRPARAM;
  69:../Generated_Code/CS.c **** 
  70:../Generated_Code/CS.c **** /*
  71:../Generated_Code/CS.c **** ** ===================================================================
  72:../Generated_Code/CS.c **** **     Method      :  CS_Init (component ExtInt_LDD)
  73:../Generated_Code/CS.c **** */
  74:../Generated_Code/CS.c **** /*!
  75:../Generated_Code/CS.c **** **     @brief
  76:../Generated_Code/CS.c **** **         This method initializes the associated peripheral(s) and the
  77:../Generated_Code/CS.c **** **         component internal variables. The method is called
  78:../Generated_Code/CS.c **** **         automatically as a part of the application initialization
  79:../Generated_Code/CS.c **** **         code.
  80:../Generated_Code/CS.c **** **     @param
  81:../Generated_Code/CS.c **** **         UserDataPtr     - Pointer to the RTOS device
  82:../Generated_Code/CS.c **** **                           structure. This pointer will be passed to
  83:../Generated_Code/CS.c **** **                           all events as parameter.
  84:../Generated_Code/CS.c **** **     @return
  85:../Generated_Code/CS.c **** **                         - Pointer to the dynamically allocated private
  86:../Generated_Code/CS.c **** **                           structure or NULL if there was an error.
  87:../Generated_Code/CS.c **** */
  88:../Generated_Code/CS.c **** /* ===================================================================*/
  89:../Generated_Code/CS.c **** LDD_TDeviceData* CS_Init(LDD_TUserData *UserDataPtr)
  90:../Generated_Code/CS.c **** {
  38              		.loc 1 90 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 84B0     		sub	sp, sp, #16
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 24
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 7860     		str	r0, [r7, #4]
  91:../Generated_Code/CS.c ****   /* Allocate LDD device structure */
  92:../Generated_Code/CS.c ****   CS_TDeviceData *DeviceDataPrv;
  93:../Generated_Code/CS.c **** 
  94:../Generated_Code/CS.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
  95:../Generated_Code/CS.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  52              		.loc 1 95 0
  53 0008 174B     		ldr	r3, .L3
  54 000a FB60     		str	r3, [r7, #12]
  96:../Generated_Code/CS.c ****   /* Store the UserData pointer */
  97:../Generated_Code/CS.c ****   DeviceDataPrv->UserData = UserDataPtr;
  55              		.loc 1 97 0
  56 000c FB68     		ldr	r3, [r7, #12]
  57 000e 7A68     		ldr	r2, [r7, #4]
  58 0010 1A60     		str	r2, [r3]
  98:../Generated_Code/CS.c ****   /* Interrupt vector(s) allocation */
  99:../Generated_Code/CS.c ****   /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the glo
 100:../Generated_Code/CS.c ****   INT_PORTE__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
  59              		.loc 1 100 0
  60 0012 164B     		ldr	r3, .L3+4
  61 0014 FA68     		ldr	r2, [r7, #12]
  62 0016 1A60     		str	r2, [r3]
 101:../Generated_Code/CS.c ****   /* Clear interrupt status flag */
 102:../Generated_Code/CS.c ****   PORTE_ISFR = PORT_ISFR_ISF(0x10);                                   
  63              		.loc 1 102 0
  64 0018 154A     		ldr	r2, .L3+8
  65 001a A023     		mov	r3, #160
  66 001c 1021     		mov	r1, #16
  67 001e D150     		str	r1, [r2, r3]
 103:../Generated_Code/CS.c ****   /* Initialization of Port Control registers */
 104:../Generated_Code/CS.c ****   /* PORTE_PCR4: ISF=0,IRQC=0x0A,MUX=1 */
 105:../Generated_Code/CS.c ****   PORTE_PCR4 = (uint32_t)((PORTE_PCR4 & (uint32_t)~(uint32_t)(
  68              		.loc 1 105 0
  69 0020 134B     		ldr	r3, .L3+8
  70 0022 134A     		ldr	r2, .L3+8
  71 0024 1169     		ldr	r1, [r2, #16]
  72 0026 134A     		ldr	r2, .L3+12
  73 0028 0A40     		and	r2, r1
  74 002a 1349     		ldr	r1, .L3+16
  75 002c 0A43     		orr	r2, r1
  76 002e 1A61     		str	r2, [r3, #16]
 106:../Generated_Code/CS.c ****                 PORT_PCR_ISF_MASK |
 107:../Generated_Code/CS.c ****                 PORT_PCR_IRQC(0x05) |
 108:../Generated_Code/CS.c ****                 PORT_PCR_MUX(0x06)
 109:../Generated_Code/CS.c ****                )) | (uint32_t)(
 110:../Generated_Code/CS.c ****                 PORT_PCR_IRQC(0x0A) |
 111:../Generated_Code/CS.c ****                 PORT_PCR_MUX(0x01)
 112:../Generated_Code/CS.c ****                ));                                  
 113:../Generated_Code/CS.c ****   /* NVIC_IPR7: PRI_31=0x80 */
 114:../Generated_Code/CS.c ****   NVIC_IPR7 = (uint32_t)((NVIC_IPR7 & (uint32_t)~(uint32_t)(
  77              		.loc 1 114 0
  78 0030 124A     		ldr	r2, .L3+20
  79 0032 1249     		ldr	r1, .L3+20
  80 0034 C723     		mov	r3, #199
  81 0036 9B00     		lsl	r3, r3, #2
  82 0038 CB58     		ldr	r3, [r1, r3]
  83 003a 1B02     		lsl	r3, r3, #8
  84 003c 1B0A     		lsr	r3, r3, #8
  85 003e 8021     		mov	r1, #128
  86 0040 0906     		lsl	r1, r1, #24
  87 0042 1943     		orr	r1, r3
  88 0044 C723     		mov	r3, #199
  89 0046 9B00     		lsl	r3, r3, #2
  90 0048 D150     		str	r1, [r2, r3]
 115:../Generated_Code/CS.c ****                NVIC_IP_PRI_31(0x7F)
 116:../Generated_Code/CS.c ****               )) | (uint32_t)(
 117:../Generated_Code/CS.c ****                NVIC_IP_PRI_31(0x80)
 118:../Generated_Code/CS.c ****               ));                                  
 119:../Generated_Code/CS.c ****   /* NVIC_ISER: SETENA|=0x80000000 */
 120:../Generated_Code/CS.c ****   NVIC_ISER |= NVIC_ISER_SETENA(0x80000000);                                   
  91              		.loc 1 120 0
  92 004a 0C4B     		ldr	r3, .L3+20
  93 004c 0B4A     		ldr	r2, .L3+20
  94 004e 1268     		ldr	r2, [r2]
  95 0050 8021     		mov	r1, #128
  96 0052 0906     		lsl	r1, r1, #24
  97 0054 0A43     		orr	r2, r1
  98 0056 1A60     		str	r2, [r3]
 121:../Generated_Code/CS.c ****   /* Registration of the device structure */
 122:../Generated_Code/CS.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_CS_ID,DeviceDataPrv);
  99              		.loc 1 122 0
 100 0058 094B     		ldr	r3, .L3+24
 101 005a FA68     		ldr	r2, [r7, #12]
 102 005c 9A60     		str	r2, [r3, #8]
 123:../Generated_Code/CS.c ****   return ((LDD_TDeviceData *)DeviceDataPrv);
 103              		.loc 1 123 0
 104 005e FB68     		ldr	r3, [r7, #12]
 124:../Generated_Code/CS.c **** }
 105              		.loc 1 124 0
 106 0060 181C     		mov	r0, r3
 107 0062 BD46     		mov	sp, r7
 108 0064 04B0     		add	sp, sp, #16
 109              		@ sp needed for prologue
 110 0066 80BD     		pop	{r7, pc}
 111              	.L4:
 112              		.align	2
 113              	.L3:
 114 0068 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 115 006c 00000000 		.word	INT_PORTE__DEFAULT_RTOS_ISRPARAM
 116 0070 00D00440 		.word	1074057216
 117 0074 FFF8F0FE 		.word	-17762049
 118 0078 00010A00 		.word	655616
 119 007c 00E100E0 		.word	-536813312
 120 0080 00000000 		.word	PE_LDD_DeviceDataList
 121              		.cfi_endproc
 122              	.LFE0:
 124              		.section	.text.CS_Interrupt,"ax",%progbits
 125              		.align	2
 126              		.global	CS_Interrupt
 127              		.code	16
 128              		.thumb_func
 130              	CS_Interrupt:
 131              	.LFB1:
 125:../Generated_Code/CS.c **** 
 126:../Generated_Code/CS.c **** /*
 127:../Generated_Code/CS.c **** ** ===================================================================
 128:../Generated_Code/CS.c **** **     Method      :  CS_Interrupt (component ExtInt_LDD)
 129:../Generated_Code/CS.c **** **
 130:../Generated_Code/CS.c **** **     Description :
 131:../Generated_Code/CS.c **** **         The method services the interrupt of the selected peripheral(s)
 132:../Generated_Code/CS.c **** **         and eventually invokes event(s) of the component.
 133:../Generated_Code/CS.c **** **         This method is internal. It is used by Processor Expert only.
 134:../Generated_Code/CS.c **** ** ===================================================================
 135:../Generated_Code/CS.c **** */
 136:../Generated_Code/CS.c **** PE_ISR(CS_Interrupt)
 137:../Generated_Code/CS.c **** {
 132              		.loc 1 137 0
 133              		.cfi_startproc
 134 0000 80B5     		push	{r7, lr}
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 7, -8
 138              		.cfi_offset 14, -4
 139 0002 82B0     		sub	sp, sp, #8
 140              	.LCFI4:
 141              		.cfi_def_cfa_offset 16
 142 0004 00AF     		add	r7, sp, #0
 143              	.LCFI5:
 144              		.cfi_def_cfa_register 7
 138:../Generated_Code/CS.c ****   /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
 139:../Generated_Code/CS.c ****   CS_TDeviceDataPtr DeviceDataPrv = INT_PORTE__DEFAULT_RTOS_ISRPARAM;
 145              		.loc 1 139 0
 146 0006 094B     		ldr	r3, .L6
 147 0008 1B68     		ldr	r3, [r3]
 148 000a 7B60     		str	r3, [r7, #4]
 140:../Generated_Code/CS.c **** 
 141:../Generated_Code/CS.c ****   /* Clear the interrupt flag */
 142:../Generated_Code/CS.c ****   PORT_PDD_ClearPinInterruptFlag(PORTE_BASE_PTR, CS_PIN_INDEX);
 149              		.loc 1 142 0
 150 000c 084B     		ldr	r3, .L6+4
 151 000e 084A     		ldr	r2, .L6+4
 152 0010 1269     		ldr	r2, [r2, #16]
 153 0012 8021     		mov	r1, #128
 154 0014 4904     		lsl	r1, r1, #17
 155 0016 0A43     		orr	r2, r1
 156 0018 1A61     		str	r2, [r3, #16]
 143:../Generated_Code/CS.c ****   /* Call OnInterrupt event */
 144:../Generated_Code/CS.c ****   CS_OnInterrupt(DeviceDataPrv->UserData);
 157              		.loc 1 144 0
 158 001a 7B68     		ldr	r3, [r7, #4]
 159 001c 1B68     		ldr	r3, [r3]
 160 001e 181C     		mov	r0, r3
 161 0020 FFF7FEFF 		bl	CS_OnInterrupt
 145:../Generated_Code/CS.c **** }
 162              		.loc 1 145 0
 163 0024 BD46     		mov	sp, r7
 164 0026 02B0     		add	sp, sp, #8
 165              		@ sp needed for prologue
 166 0028 80BD     		pop	{r7, pc}
 167              	.L7:
 168 002a C046     		.align	2
 169              	.L6:
 170 002c 00000000 		.word	INT_PORTE__DEFAULT_RTOS_ISRPARAM
 171 0030 00D00440 		.word	1074057216
 172              		.cfi_endproc
 173              	.LFE1:
 175              		.text
 176              	.Letext0:
 177              		.file 2 "E:/Freescale/CW MCU v10.5/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 178              		.file 3 "D:/kuaipan/SEMG/FRDM_KL25Z_SPI/spi_demo_slave/Generated_Code/PE_Types.h"
 179              		.file 4 "D:/kuaipan/SEMG/FRDM_KL25Z_SPI/spi_demo_slave/Generated_Code/IO_Map.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CS.c
C:\Users\lab\AppData\Local\Temp\ccrsIbZT.s:18     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\lab\AppData\Local\Temp\ccrsIbZT.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\lab\AppData\Local\Temp\ccrsIbZT.s:24     .bss.INT_PORTE__DEFAULT_RTOS_ISRPARAM:00000000 $d
C:\Users\lab\AppData\Local\Temp\ccrsIbZT.s:27     .bss.INT_PORTE__DEFAULT_RTOS_ISRPARAM:00000000 INT_PORTE__DEFAULT_RTOS_ISRPARAM
C:\Users\lab\AppData\Local\Temp\ccrsIbZT.s:30     .text.CS_Init:00000000 $t
C:\Users\lab\AppData\Local\Temp\ccrsIbZT.s:35     .text.CS_Init:00000000 CS_Init
C:\Users\lab\AppData\Local\Temp\ccrsIbZT.s:114    .text.CS_Init:00000068 $d
C:\Users\lab\AppData\Local\Temp\ccrsIbZT.s:125    .text.CS_Interrupt:00000000 $t
C:\Users\lab\AppData\Local\Temp\ccrsIbZT.s:130    .text.CS_Interrupt:00000000 CS_Interrupt
C:\Users\lab\AppData\Local\Temp\ccrsIbZT.s:170    .text.CS_Interrupt:0000002c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
CS_OnInterrupt

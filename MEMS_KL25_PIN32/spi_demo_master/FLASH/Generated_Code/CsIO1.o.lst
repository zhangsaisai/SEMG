   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CsIO1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.__read_console,"ax",%progbits
  18              		.align	2
  19              		.global	__read_console
  20              		.code	16
  21              		.thumb_func
  23              	__read_console:
  24              	.LFB0:
  25              		.file 1 "../Generated_Code/CsIO1.c"
   1:../Generated_Code/CsIO1.c **** /* ###################################################################
   2:../Generated_Code/CsIO1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/CsIO1.c **** **     Filename    : CsIO1.c
   4:../Generated_Code/CsIO1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/CsIO1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/CsIO1.c **** **     Component   : ConsoleIO
   7:../Generated_Code/CsIO1.c **** **     Version     : Component 01.012, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/CsIO1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/CsIO1.c **** **     Date/Time   : 2015-10-12, 14:23, # CodeGen: 6
  10:../Generated_Code/CsIO1.c **** **     Abstract    :
  11:../Generated_Code/CsIO1.c **** **         This component generates low-level methods for redirecting console I/O to the selected U
  12:../Generated_Code/CsIO1.c **** **         These methods are typically used by printf()/scanf() methods.
  13:../Generated_Code/CsIO1.c **** **     Settings    :
  14:../Generated_Code/CsIO1.c **** **          Component name                                 : CsIO1
  15:../Generated_Code/CsIO1.c **** **          Serial_LDD_Link                                : ConsoleIO_Serial_LDD
  16:../Generated_Code/CsIO1.c **** **     Contents    :
  17:../Generated_Code/CsIO1.c **** **         No public methods
  18:../Generated_Code/CsIO1.c **** **
  19:../Generated_Code/CsIO1.c **** **     Copyright : 1997 - 2013 Freescale Semiconductor, Inc. All Rights Reserved.
  20:../Generated_Code/CsIO1.c **** **     SOURCE DISTRIBUTION PERMISSIBLE as directed in End User License Agreement.
  21:../Generated_Code/CsIO1.c **** **     
  22:../Generated_Code/CsIO1.c **** **     http      : www.freescale.com
  23:../Generated_Code/CsIO1.c **** **     mail      : support@freescale.com
  24:../Generated_Code/CsIO1.c **** ** ###################################################################*/
  25:../Generated_Code/CsIO1.c **** /*!
  26:../Generated_Code/CsIO1.c **** ** @file CsIO1.c
  27:../Generated_Code/CsIO1.c **** ** @version 01.00
  28:../Generated_Code/CsIO1.c **** ** @brief
  29:../Generated_Code/CsIO1.c **** **         This component generates low-level methods for redirecting console I/O to the selected U
  30:../Generated_Code/CsIO1.c **** **         These methods are typically used by printf()/scanf() methods.
  31:../Generated_Code/CsIO1.c **** */         
  32:../Generated_Code/CsIO1.c **** /*!
  33:../Generated_Code/CsIO1.c **** **  @addtogroup CsIO1_module CsIO1 module documentation
  34:../Generated_Code/CsIO1.c **** **  @{
  35:../Generated_Code/CsIO1.c **** */         
  36:../Generated_Code/CsIO1.c **** 
  37:../Generated_Code/CsIO1.c **** /* MODULE CsIO1. */
  38:../Generated_Code/CsIO1.c **** 
  39:../Generated_Code/CsIO1.c **** #include "IO_Map.h"
  40:../Generated_Code/CsIO1.c **** #include "stdio.h"
  41:../Generated_Code/CsIO1.c **** #include <stdarg.h>
  42:../Generated_Code/CsIO1.c **** #include "UART0_PDD.h"
  43:../Generated_Code/CsIO1.c **** 
  44:../Generated_Code/CsIO1.c **** #ifdef _EWL_STDINT_H
  45:../Generated_Code/CsIO1.c **** 
  46:../Generated_Code/CsIO1.c **** /*
  47:../Generated_Code/CsIO1.c **** ** ===================================================================
  48:../Generated_Code/CsIO1.c **** **     Method      :  CsIO1___read_console (component ConsoleIO)
  49:../Generated_Code/CsIO1.c **** **
  50:../Generated_Code/CsIO1.c **** **     Description :
  51:../Generated_Code/CsIO1.c **** **         __read_console
  52:../Generated_Code/CsIO1.c **** **         This method is internal. It is used by Processor Expert only.
  53:../Generated_Code/CsIO1.c **** ** ===================================================================
  54:../Generated_Code/CsIO1.c **** */
  55:../Generated_Code/CsIO1.c **** int __read_console(__file_handle handle, unsigned char* buffer, size_t * count)
  56:../Generated_Code/CsIO1.c **** {
  26              		.loc 1 56 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 86B0     		sub	sp, sp, #24
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 32
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 B960     		str	r1, [r7, #8]
  41 000a 7A60     		str	r2, [r7, #4]
  57:../Generated_Code/CsIO1.c ****   size_t CharCnt = 0x00;
  42              		.loc 1 57 0
  43 000c 0023     		mov	r3, #0
  44 000e 7B61     		str	r3, [r7, #20]
  58:../Generated_Code/CsIO1.c **** 
  59:../Generated_Code/CsIO1.c ****   (void)handle;                        /* Parameter is not used, suppress unused argument warning *
  60:../Generated_Code/CsIO1.c ****   for (;*count > 0x00; --*count) {
  45              		.loc 1 60 0
  46 0010 26E0     		b	.L2
  47              	.L8:
  61:../Generated_Code/CsIO1.c ****     if ((UART0_PDD_ReadInterruptStatusReg(UART0_BASE_PTR) & UART0_S1_RDRF_MASK) == 0x00) { /* Any d
  48              		.loc 1 61 0
  49 0012 1A4B     		ldr	r3, .L10
  50 0014 1B79     		ldrb	r3, [r3, #4]
  51 0016 DBB2     		uxtb	r3, r3
  52 0018 1A1C     		mov	r2, r3
  53 001a 2023     		mov	r3, #32
  54 001c 1340     		and	r3, r2
  55 001e 07D1     		bne	.L3
  62:../Generated_Code/CsIO1.c ****       /* Clear error flags */
  63:../Generated_Code/CsIO1.c ****       UART0_PDD_ClearInterruptFlags(UART0_BASE_PTR,0x1FU);
  56              		.loc 1 63 0
  57 0020 164B     		ldr	r3, .L10
  58 0022 1F22     		mov	r2, #31
  59 0024 1A71     		strb	r2, [r3, #4]
  64:../Generated_Code/CsIO1.c ****       if (CharCnt != 0x00) {           /* No, at least one char received? */
  60              		.loc 1 64 0
  61 0026 7B69     		ldr	r3, [r7, #20]
  62 0028 002B     		cmp	r3, #0
  63 002a 1ED1     		bne	.L9
  64              	.L4:
  65:../Generated_Code/CsIO1.c ****         break;                         /* Yes, return received char(s) */
  66:../Generated_Code/CsIO1.c ****       } else {                         /* Wait until a char is received */
  67:../Generated_Code/CsIO1.c ****         return ( __io_EOF);
  65              		.loc 1 67 0
  66 002c 0223     		mov	r3, #2
  67 002e 21E0     		b	.L6
  68              	.L3:
  68:../Generated_Code/CsIO1.c ****       }
  69:../Generated_Code/CsIO1.c ****     }
  70:../Generated_Code/CsIO1.c ****     CharCnt++;                         /* Increase char counter */
  69              		.loc 1 70 0
  70 0030 7B69     		ldr	r3, [r7, #20]
  71 0032 0133     		add	r3, r3, #1
  72 0034 7B61     		str	r3, [r7, #20]
  71:../Generated_Code/CsIO1.c ****     /* Save character received by UARTx device into the receive buffer */
  72:../Generated_Code/CsIO1.c ****     *buffer = (unsigned char)UART0_PDD_GetChar8(UART0_BASE_PTR);
  73              		.loc 1 72 0
  74 0036 114B     		ldr	r3, .L10
  75 0038 DB79     		ldrb	r3, [r3, #7]
  76 003a DAB2     		uxtb	r2, r3
  77 003c BB68     		ldr	r3, [r7, #8]
  78 003e 1A70     		strb	r2, [r3]
  73:../Generated_Code/CsIO1.c ****     /* Stop reading if CR (Ox0D) character is received */
  74:../Generated_Code/CsIO1.c ****     if (*buffer == 0x0DU) {            /* New line character (CR) received ? */
  79              		.loc 1 74 0
  80 0040 BB68     		ldr	r3, [r7, #8]
  81 0042 1B78     		ldrb	r3, [r3]
  82 0044 0D2B     		cmp	r3, #13
  83 0046 03D1     		bne	.L7
  75:../Generated_Code/CsIO1.c ****       *buffer = '\n';                  /* Yes, convert LF to '\n' char. */
  84              		.loc 1 75 0
  85 0048 BB68     		ldr	r3, [r7, #8]
  86 004a 0A22     		mov	r2, #10
  87 004c 1A70     		strb	r2, [r3]
  76:../Generated_Code/CsIO1.c ****       break;                           /* Stop loop and return received char(s) */
  88              		.loc 1 76 0
  89 004e 0DE0     		b	.L5
  90              	.L7:
  77:../Generated_Code/CsIO1.c ****     }
  78:../Generated_Code/CsIO1.c ****     buffer++;                          /* Increase buffer pointer */
  91              		.loc 1 78 0
  92 0050 BB68     		ldr	r3, [r7, #8]
  93 0052 0133     		add	r3, r3, #1
  94 0054 BB60     		str	r3, [r7, #8]
  60:../Generated_Code/CsIO1.c ****   for (;*count > 0x00; --*count) {
  95              		.loc 1 60 0
  96 0056 7B68     		ldr	r3, [r7, #4]
  97 0058 1B68     		ldr	r3, [r3]
  98 005a 5A1E     		sub	r2, r3, #1
  99 005c 7B68     		ldr	r3, [r7, #4]
 100 005e 1A60     		str	r2, [r3]
 101              	.L2:
  60:../Generated_Code/CsIO1.c ****   for (;*count > 0x00; --*count) {
 102              		.loc 1 60 0 is_stmt 0
 103 0060 7B68     		ldr	r3, [r7, #4]
 104 0062 1B68     		ldr	r3, [r3]
 105 0064 002B     		cmp	r3, #0
 106 0066 D4D1     		bne	.L8
 107 0068 00E0     		b	.L5
 108              	.L9:
  65:../Generated_Code/CsIO1.c ****         break;                         /* Yes, return received char(s) */
 109              		.loc 1 65 0 is_stmt 1
 110 006a C046     		mov	r8, r8
 111              	.L5:
  79:../Generated_Code/CsIO1.c ****   }
  80:../Generated_Code/CsIO1.c ****   *count = CharCnt;
 112              		.loc 1 80 0
 113 006c 7B68     		ldr	r3, [r7, #4]
 114 006e 7A69     		ldr	r2, [r7, #20]
 115 0070 1A60     		str	r2, [r3]
  81:../Generated_Code/CsIO1.c ****   return (__no_io_error);
 116              		.loc 1 81 0
 117 0072 0023     		mov	r3, #0
 118              	.L6:
  82:../Generated_Code/CsIO1.c **** }
 119              		.loc 1 82 0
 120 0074 181C     		mov	r0, r3
 121 0076 BD46     		mov	sp, r7
 122 0078 06B0     		add	sp, sp, #24
 123              		@ sp needed for prologue
 124 007a 80BD     		pop	{r7, pc}
 125              	.L11:
 126              		.align	2
 127              	.L10:
 128 007c 00A00640 		.word	1074176000
 129              		.cfi_endproc
 130              	.LFE0:
 132              		.section	.text.__write_console,"ax",%progbits
 133              		.align	2
 134              		.global	__write_console
 135              		.code	16
 136              		.thumb_func
 138              	__write_console:
 139              	.LFB1:
  83:../Generated_Code/CsIO1.c **** 
  84:../Generated_Code/CsIO1.c **** /*
  85:../Generated_Code/CsIO1.c **** ** ===================================================================
  86:../Generated_Code/CsIO1.c **** **     Method      :  CsIO1___write_console (component ConsoleIO)
  87:../Generated_Code/CsIO1.c **** **
  88:../Generated_Code/CsIO1.c **** **     Description :
  89:../Generated_Code/CsIO1.c **** **         __write_console
  90:../Generated_Code/CsIO1.c **** **         This method is internal. It is used by Processor Expert only.
  91:../Generated_Code/CsIO1.c **** ** ===================================================================
  92:../Generated_Code/CsIO1.c **** */
  93:../Generated_Code/CsIO1.c **** int __write_console(__file_handle handle, unsigned char* buffer, size_t* count)
  94:../Generated_Code/CsIO1.c **** {
 140              		.loc 1 94 0
 141              		.cfi_startproc
 142 0000 80B5     		push	{r7, lr}
 143              	.LCFI3:
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 7, -8
 146              		.cfi_offset 14, -4
 147 0002 86B0     		sub	sp, sp, #24
 148              	.LCFI4:
 149              		.cfi_def_cfa_offset 32
 150 0004 00AF     		add	r7, sp, #0
 151              	.LCFI5:
 152              		.cfi_def_cfa_register 7
 153 0006 F860     		str	r0, [r7, #12]
 154 0008 B960     		str	r1, [r7, #8]
 155 000a 7A60     		str	r2, [r7, #4]
  95:../Generated_Code/CsIO1.c ****   size_t CharCnt = 0x00;
 156              		.loc 1 95 0
 157 000c 0023     		mov	r3, #0
 158 000e 7B61     		str	r3, [r7, #20]
  96:../Generated_Code/CsIO1.c **** 
  97:../Generated_Code/CsIO1.c ****   (void)handle;                        /* Parameter is not used, suppress unused argument warning *
  98:../Generated_Code/CsIO1.c ****   for (;*count > 0x00; --*count) {
 159              		.loc 1 98 0
 160 0010 25E0     		b	.L13
 161              	.L19:
  99:../Generated_Code/CsIO1.c ****     /* Wait until UART is ready for saving a next character into the transmit buffer */
 100:../Generated_Code/CsIO1.c ****     while ((UART0_PDD_ReadInterruptStatusReg(UART0_BASE_PTR) & UART0_S1_TDRE_MASK) == 0) {};
 162              		.loc 1 100 0
 163 0012 C046     		mov	r8, r8
 164              	.L14:
 165              		.loc 1 100 0 is_stmt 0
 166 0014 184B     		ldr	r3, .L20
 167 0016 1B79     		ldrb	r3, [r3, #4]
 168 0018 DBB2     		uxtb	r3, r3
 169 001a DBB2     		uxtb	r3, r3
 170 001c 5BB2     		sxtb	r3, r3
 171 001e 002B     		cmp	r3, #0
 172 0020 F8DA     		bge	.L14
 101:../Generated_Code/CsIO1.c ****     if (*buffer == '\n') {
 173              		.loc 1 101 0 is_stmt 1
 174 0022 BB68     		ldr	r3, [r7, #8]
 175 0024 1B78     		ldrb	r3, [r3]
 176 0026 0A2B     		cmp	r3, #10
 177 0028 0AD1     		bne	.L15
 102:../Generated_Code/CsIO1.c ****       /* Send '\r'(0x0D) before each '\n'(0x0A). */
 103:../Generated_Code/CsIO1.c ****       /* Save a character into the transmit buffer of the UART0 device */
 104:../Generated_Code/CsIO1.c ****       UART0_PDD_PutChar8(UART0_BASE_PTR, 0x0DU);
 178              		.loc 1 104 0
 179 002a 134B     		ldr	r3, .L20
 180 002c 0D22     		mov	r2, #13
 181 002e DA71     		strb	r2, [r3, #7]
 105:../Generated_Code/CsIO1.c ****       /* Wait until UART is ready for saving a next character into the transmit buffer */
 106:../Generated_Code/CsIO1.c ****       while ((UART0_PDD_ReadInterruptStatusReg(UART0_BASE_PTR) & UART0_S1_TDRE_MASK) == 0) {};
 182              		.loc 1 106 0
 183 0030 C046     		mov	r8, r8
 184              	.L16:
 185              		.loc 1 106 0 is_stmt 0
 186 0032 114B     		ldr	r3, .L20
 187 0034 1B79     		ldrb	r3, [r3, #4]
 188 0036 DBB2     		uxtb	r3, r3
 189 0038 DBB2     		uxtb	r3, r3
 190 003a 5BB2     		sxtb	r3, r3
 191 003c 002B     		cmp	r3, #0
 192 003e F8DA     		bge	.L16
 193              	.L15:
 107:../Generated_Code/CsIO1.c ****     }
 108:../Generated_Code/CsIO1.c ****     /* Save a character into the transmit buffer of the UART0 device */
 109:../Generated_Code/CsIO1.c ****     UART0_PDD_PutChar8(UART0_BASE_PTR, (unsigned char)*buffer);
 194              		.loc 1 109 0 is_stmt 1
 195 0040 0D4B     		ldr	r3, .L20
 196 0042 BA68     		ldr	r2, [r7, #8]
 197 0044 1278     		ldrb	r2, [r2]
 198 0046 DA71     		strb	r2, [r3, #7]
 110:../Generated_Code/CsIO1.c ****     buffer++;                          /* Increase buffer pointer */
 199              		.loc 1 110 0
 200 0048 BB68     		ldr	r3, [r7, #8]
 201 004a 0133     		add	r3, r3, #1
 202 004c BB60     		str	r3, [r7, #8]
 111:../Generated_Code/CsIO1.c ****     CharCnt++;                         /* Increase char counter */
 203              		.loc 1 111 0
 204 004e 7B69     		ldr	r3, [r7, #20]
 205 0050 0133     		add	r3, r3, #1
 206 0052 7B61     		str	r3, [r7, #20]
  98:../Generated_Code/CsIO1.c ****   for (;*count > 0x00; --*count) {
 207              		.loc 1 98 0
 208 0054 7B68     		ldr	r3, [r7, #4]
 209 0056 1B68     		ldr	r3, [r3]
 210 0058 5A1E     		sub	r2, r3, #1
 211 005a 7B68     		ldr	r3, [r7, #4]
 212 005c 1A60     		str	r2, [r3]
 213              	.L13:
  98:../Generated_Code/CsIO1.c ****   for (;*count > 0x00; --*count) {
 214              		.loc 1 98 0 is_stmt 0
 215 005e 7B68     		ldr	r3, [r7, #4]
 216 0060 1B68     		ldr	r3, [r3]
 217 0062 002B     		cmp	r3, #0
 218 0064 D5D1     		bne	.L19
 112:../Generated_Code/CsIO1.c ****   }
 113:../Generated_Code/CsIO1.c ****   *count = CharCnt;
 219              		.loc 1 113 0 is_stmt 1
 220 0066 7B68     		ldr	r3, [r7, #4]
 221 0068 7A69     		ldr	r2, [r7, #20]
 222 006a 1A60     		str	r2, [r3]
 114:../Generated_Code/CsIO1.c ****   return(__no_io_error);
 223              		.loc 1 114 0
 224 006c 0023     		mov	r3, #0
 115:../Generated_Code/CsIO1.c **** }
 225              		.loc 1 115 0
 226 006e 181C     		mov	r0, r3
 227 0070 BD46     		mov	sp, r7
 228 0072 06B0     		add	sp, sp, #24
 229              		@ sp needed for prologue
 230 0074 80BD     		pop	{r7, pc}
 231              	.L21:
 232 0076 C046     		.align	2
 233              	.L20:
 234 0078 00A00640 		.word	1074176000
 235              		.cfi_endproc
 236              	.LFE1:
 238              		.section	.text.__close_console,"ax",%progbits
 239              		.align	2
 240              		.global	__close_console
 241              		.code	16
 242              		.thumb_func
 244              	__close_console:
 245              	.LFB2:
 116:../Generated_Code/CsIO1.c **** 
 117:../Generated_Code/CsIO1.c **** /*
 118:../Generated_Code/CsIO1.c **** ** ===================================================================
 119:../Generated_Code/CsIO1.c **** **     Method      :  CsIO1___close_console (component ConsoleIO)
 120:../Generated_Code/CsIO1.c **** **
 121:../Generated_Code/CsIO1.c **** **     Description :
 122:../Generated_Code/CsIO1.c **** **         __close_console
 123:../Generated_Code/CsIO1.c **** **         This method is internal. It is used by Processor Expert only.
 124:../Generated_Code/CsIO1.c **** ** ===================================================================
 125:../Generated_Code/CsIO1.c **** */
 126:../Generated_Code/CsIO1.c **** int __close_console(__file_handle handle)
 127:../Generated_Code/CsIO1.c **** {
 246              		.loc 1 127 0
 247              		.cfi_startproc
 248 0000 80B5     		push	{r7, lr}
 249              	.LCFI6:
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              	.LCFI7:
 255              		.cfi_def_cfa_offset 16
 256 0004 00AF     		add	r7, sp, #0
 257              	.LCFI8:
 258              		.cfi_def_cfa_register 7
 259 0006 7860     		str	r0, [r7, #4]
 128:../Generated_Code/CsIO1.c ****   (void)handle;                        /* Parameter is not used, suppress unused argument warning *
 129:../Generated_Code/CsIO1.c ****   return(__no_io_error);
 260              		.loc 1 129 0
 261 0008 0023     		mov	r3, #0
 130:../Generated_Code/CsIO1.c **** }
 262              		.loc 1 130 0
 263 000a 181C     		mov	r0, r3
 264 000c BD46     		mov	sp, r7
 265 000e 02B0     		add	sp, sp, #8
 266              		@ sp needed for prologue
 267 0010 80BD     		pop	{r7, pc}
 268              		.cfi_endproc
 269              	.LFE2:
 271 0012 C046     		.text
 272              	.Letext0:
 273              		.file 2 "../Generated_Code/IO_Map.h"
 274              		.file 3 "E:/Freescale/CW MCU v10.5/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 275              		.file 4 "E:/Freescale/CW MCU v10.5/MCU/ARM_GCC_Support/ewl/EWL_C/include/size_t.h"
 276              		.file 5 "E:/Freescale/CW MCU v10.5/MCU/ARM_GCC_Support/ewl/EWL_C/include/file_struc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CsIO1.c
C:\Users\lab\AppData\Local\Temp\ccxML24X.s:18     .text.__read_console:00000000 $t
C:\Users\lab\AppData\Local\Temp\ccxML24X.s:23     .text.__read_console:00000000 __read_console
C:\Users\lab\AppData\Local\Temp\ccxML24X.s:128    .text.__read_console:0000007c $d
C:\Users\lab\AppData\Local\Temp\ccxML24X.s:133    .text.__write_console:00000000 $t
C:\Users\lab\AppData\Local\Temp\ccxML24X.s:138    .text.__write_console:00000000 __write_console
C:\Users\lab\AppData\Local\Temp\ccxML24X.s:234    .text.__write_console:00000078 $d
C:\Users\lab\AppData\Local\Temp\ccxML24X.s:239    .text.__close_console:00000000 $t
C:\Users\lab\AppData\Local\Temp\ccxML24X.s:244    .text.__close_console:00000000 __close_console
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS

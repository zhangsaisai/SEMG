Sources\LPF.o:     file format elf32-littlearmSources\LPF.oarchitecture: arm, flags 0x00000011:HAS_RELOC, HAS_SYMSstart address 0x00000000private flags = 5000000: [Version5 EABI]Sections:Idx Name          Size      VMA       LMA       File off  Algn  0 .text         00000000  00000000  00000000  00000034  2**1                  CONTENTS, ALLOC, LOAD, READONLY, CODE  1 .data         00000000  00000000  00000000  00000034  2**0                  CONTENTS, ALLOC, LOAD, DATA  2 .bss          00000000  00000000  00000000  00000034  2**0                  ALLOC  3 .rodata.H     00000054  00000000  00000000  00000034  2**2                  CONTENTS, ALLOC, LOAD, READONLY, DATA  4 .text.EvenFirLPF 000000bc  00000000  00000000  00000088  2**2                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE  5 .text.FirLPF40 00000380  00000000  00000000  00000144  2**2                  CONTENTS, ALLOC, LOAD, READONLY, CODE  6 .debug_info   00000245  00000000  00000000  000004c4  2**0                  CONTENTS, RELOC, READONLY, DEBUGGING  7 .debug_abbrev 000000e6  00000000  00000000  00000709  2**0                  CONTENTS, READONLY, DEBUGGING  8 .debug_loc    00000070  00000000  00000000  000007ef  2**0                  CONTENTS, RELOC, READONLY, DEBUGGING  9 .debug_aranges 00000028  00000000  00000000  0000085f  2**0                  CONTENTS, RELOC, READONLY, DEBUGGING 10 .debug_macinfo 0000af80  00000000  00000000  00000887  2**0                  CONTENTS, READONLY, DEBUGGING 11 .debug_line   000002a0  00000000  00000000  0000b807  2**0                  CONTENTS, RELOC, READONLY, DEBUGGING 12 .debug_str    0000018f  00000000  00000000  0000baa7  2**0                  CONTENTS, READONLY, DEBUGGING 13 .comment      0000007a  00000000  00000000  0000bc36  2**0                  CONTENTS, READONLY 14 .ARM.attributes 00000031  00000000  00000000  0000bcb0  2**0                  CONTENTS, READONLY 15 .debug_frame  00000060  00000000  00000000  0000bce4  2**2                  CONTENTS, RELOC, READONLY, DEBUGGINGSYMBOL TABLE:00000000 l    df *ABS*	00000000 LPF.c00000000 l    d  .text	00000000 .text00000000 l    d  .data	00000000 .data00000000 l    d  .bss	00000000 .bss00000000 l    d  .rodata.H	00000000 .rodata.H00000000 l     O .rodata.H	00000052 H00000000 l    d  .text.EvenFirLPF	00000000 .text.EvenFirLPF00000000 l    d  .text.FirLPF40	00000000 .text.FirLPF4000000000 l    d  .debug_info	00000000 .debug_info00000000 l    d  .debug_abbrev	00000000 .debug_abbrev00000000 l    d  .debug_loc	00000000 .debug_loc00000000 l    d  .debug_aranges	00000000 .debug_aranges00000000 l    d  .debug_macinfo	00000000 .debug_macinfo00000000 l    d  .debug_line	00000000 .debug_line00000000 l    d  .debug_str	00000000 .debug_str00000000 l    d  .debug_frame	00000000 .debug_frame00000000 l    d  .comment	00000000 .comment00000000 l    d  .ARM.attributes	00000000 .ARM.attributes00000000 g     F .text.EvenFirLPF	000000bc EvenFirLPF00000000 g     F .text.FirLPF40	00000380 FirLPF40Disassembly of section .text.EvenFirLPF:00000000 <EvenFirLPF>: *     @return *          short *//* ===================================================================*/inline short EvenFirLPF(register short const * const e, register TFilterBufferQueuePtr const fq){   0:	b5f0      	push	{r4, r5, r6, r7, lr}   2:	465f      	mov	r7, fp   4:	4656      	mov	r6, sl   6:	464d      	mov	r5, r9   8:	4644      	mov	r4, r8   a:	b4f0      	push	{r4, r5, r6, r7}   c:	af00      	add	r7, sp, #0   e:	1c0b      	adds	r3, r1, #0    register short const * head = fq->head;  10:	6ddc      	ldr	r4, [r3, #92]	; 0x5c    register short const * tail = fq->tail;  12:	6e1d      	ldr	r5, [r3, #96]	; 0x60    register short const * const leftEdge = fq->leftEdge;  14:	6d5a      	ldr	r2, [r3, #84]	; 0x54  16:	4690      	mov	r8, r2    register short const * const rightEdge = fq->rightEdge;  18:	6d9a      	ldr	r2, [r3, #88]	; 0x58  1a:	4691      	mov	r9, r2    register long result = 0;  1c:	2600      	movs	r6, #0    register short const * const H_p = H;  1e:	4a26      	ldr	r2, [pc, #152]	; (b8 <EvenFirLPF+0xb8>)  20:	4693      	mov	fp, r2    *fq->tail = *e;  22:	6e1a      	ldr	r2, [r3, #96]	; 0x60  24:	8801      	ldrh	r1, [r0, #0]  26:	8011      	strh	r1, [r2, #0]    register unsigned int i = 0;  28:	2000      	movs	r0, #0  2a:	4682      	mov	sl, r0    for(; head != tail; i++)  2c:	e01b      	b.n	66 <EvenFirLPF+0x66>    {        result += (*head + *tail) * (*(H_p + i));  2e:	8822      	ldrh	r2, [r4, #0]  30:	b211      	sxth	r1, r2  32:	882a      	ldrh	r2, [r5, #0]  34:	b212      	sxth	r2, r2  36:	188a      	adds	r2, r1, r2  38:	4650      	mov	r0, sl  3a:	0041      	lsls	r1, r0, #1  3c:	4459      	add	r1, fp  3e:	8809      	ldrh	r1, [r1, #0]  40:	b209      	sxth	r1, r1  42:	434a      	muls	r2, r1  44:	18b6      	adds	r6, r6, r2        head++;  46:	3402      	adds	r4, #2        tail--;  48:	3d02      	subs	r5, #2        head = (head <= rightEdge) ? head : leftEdge;  4a:	454c      	cmp	r4, r9  4c:	d801      	bhi.n	52 <EvenFirLPF+0x52>  4e:	1c22      	adds	r2, r4, #0  50:	e000      	b.n	54 <EvenFirLPF+0x54>  52:	4642      	mov	r2, r8  54:	1c14      	adds	r4, r2, #0        tail = (tail >= leftEdge) ? tail : rightEdge;  56:	4545      	cmp	r5, r8  58:	d301      	bcc.n	5e <EvenFirLPF+0x5e>  5a:	1c2a      	adds	r2, r5, #0  5c:	e000      	b.n	60 <EvenFirLPF+0x60>  5e:	464a      	mov	r2, r9  60:	1c15      	adds	r5, r2, #0    *fq->tail = *e;    register unsigned int i = 0;    for(; head != tail; i++)  62:	2201      	movs	r2, #1  64:	4492      	add	sl, r2  66:	42ac      	cmp	r4, r5  68:	d1e1      	bne.n	2e <EvenFirLPF+0x2e>        head++;        tail--;        head = (head <= rightEdge) ? head : leftEdge;        tail = (tail >= leftEdge) ? tail : rightEdge;    }    result += *head * (*(H_p + i));  6a:	8822      	ldrh	r2, [r4, #0]  6c:	b212      	sxth	r2, r2  6e:	4650      	mov	r0, sl  70:	0041      	lsls	r1, r0, #1  72:	4459      	add	r1, fp  74:	8809      	ldrh	r1, [r1, #0]  76:	b209      	sxth	r1, r1  78:	434a      	muls	r2, r1  7a:	18b6      	adds	r6, r6, r2    fq->head++;  7c:	6dda      	ldr	r2, [r3, #92]	; 0x5c  7e:	3202      	adds	r2, #2  80:	65da      	str	r2, [r3, #92]	; 0x5c    fq->head = (fq->head <= rightEdge) ? fq->head : leftEdge;  82:	6dda      	ldr	r2, [r3, #92]	; 0x5c  84:	454a      	cmp	r2, r9  86:	d801      	bhi.n	8c <EvenFirLPF+0x8c>  88:	6dda      	ldr	r2, [r3, #92]	; 0x5c  8a:	e000      	b.n	8e <EvenFirLPF+0x8e>  8c:	4642      	mov	r2, r8  8e:	65da      	str	r2, [r3, #92]	; 0x5c    fq->tail++;  90:	6e1a      	ldr	r2, [r3, #96]	; 0x60  92:	3202      	adds	r2, #2  94:	661a      	str	r2, [r3, #96]	; 0x60    fq->tail = (fq->tail <= rightEdge) ? fq->tail : leftEdge;  96:	6e1a      	ldr	r2, [r3, #96]	; 0x60  98:	454a      	cmp	r2, r9  9a:	d801      	bhi.n	a0 <EvenFirLPF+0xa0>  9c:	6e1a      	ldr	r2, [r3, #96]	; 0x60  9e:	e000      	b.n	a2 <EvenFirLPF+0xa2>  a0:	4642      	mov	r2, r8  a2:	661a      	str	r2, [r3, #96]	; 0x60    return result;  a4:	b2b3      	uxth	r3, r6  a6:	b21b      	sxth	r3, r3}  a8:	1c18      	adds	r0, r3, #0  aa:	46bd      	mov	sp, r7  ac:	bc3c      	pop	{r2, r3, r4, r5}  ae:	4690      	mov	r8, r2  b0:	4699      	mov	r9, r3  b2:	46a2      	mov	sl, r4  b4:	46ab      	mov	fp, r5  b6:	bdf0      	pop	{r4, r5, r6, r7, pc}  b8:	00000000 	.word	0x00000000			b8: R_ARM_ABS32	.rodata.HDisassembly of section .text.FirLPF40:00000000 <FirLPF40>: *     @return *          int *//* ===================================================================*/inline int32 FirLPF40(int16 const * const e, int16 * const buffer){   0:	b5b0      	push	{r4, r5, r7, lr}   2:	b082      	sub	sp, #8   4:	af00      	add	r7, sp, #0   6:	6078      	str	r0, [r7, #4]   8:	6039      	str	r1, [r7, #0]    register int16 *p = buffer;   a:	683c      	ldr	r4, [r7, #0]    register long result = 0;   c:	2500      	movs	r5, #0    *(p + 40) = *(p + 39);   e:	1c23      	adds	r3, r4, #0  10:	3350      	adds	r3, #80	; 0x50  12:	224e      	movs	r2, #78	; 0x4e  14:	5aa2      	ldrh	r2, [r4, r2]  16:	801a      	strh	r2, [r3, #0]    *(p + 39) = *(p + 38);  18:	1c23      	adds	r3, r4, #0  1a:	334e      	adds	r3, #78	; 0x4e  1c:	224c      	movs	r2, #76	; 0x4c  1e:	5aa2      	ldrh	r2, [r4, r2]  20:	801a      	strh	r2, [r3, #0]    *(p + 38) = *(p + 37);  22:	1c23      	adds	r3, r4, #0  24:	334c      	adds	r3, #76	; 0x4c  26:	224a      	movs	r2, #74	; 0x4a  28:	5aa2      	ldrh	r2, [r4, r2]  2a:	801a      	strh	r2, [r3, #0]    *(p + 37) = *(p + 36);  2c:	1c23      	adds	r3, r4, #0  2e:	334a      	adds	r3, #74	; 0x4a  30:	2248      	movs	r2, #72	; 0x48  32:	5aa2      	ldrh	r2, [r4, r2]  34:	801a      	strh	r2, [r3, #0]    *(p + 36) = *(p + 35);  36:	1c23      	adds	r3, r4, #0  38:	3348      	adds	r3, #72	; 0x48  3a:	2246      	movs	r2, #70	; 0x46  3c:	5aa2      	ldrh	r2, [r4, r2]  3e:	801a      	strh	r2, [r3, #0]    *(p + 35) = *(p + 34);  40:	1c23      	adds	r3, r4, #0  42:	3346      	adds	r3, #70	; 0x46  44:	2244      	movs	r2, #68	; 0x44  46:	5aa2      	ldrh	r2, [r4, r2]  48:	801a      	strh	r2, [r3, #0]    *(p + 34) = *(p + 33);  4a:	1c23      	adds	r3, r4, #0  4c:	3344      	adds	r3, #68	; 0x44  4e:	2242      	movs	r2, #66	; 0x42  50:	5aa2      	ldrh	r2, [r4, r2]  52:	801a      	strh	r2, [r3, #0]    *(p + 33) = *(p + 32);  54:	1c23      	adds	r3, r4, #0  56:	3342      	adds	r3, #66	; 0x42  58:	2240      	movs	r2, #64	; 0x40  5a:	5aa2      	ldrh	r2, [r4, r2]  5c:	801a      	strh	r2, [r3, #0]    *(p + 32) = *(p + 31);  5e:	1c23      	adds	r3, r4, #0  60:	3340      	adds	r3, #64	; 0x40  62:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e  64:	801a      	strh	r2, [r3, #0]    *(p + 31) = *(p + 30);  66:	1c23      	adds	r3, r4, #0  68:	333e      	adds	r3, #62	; 0x3e  6a:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c  6c:	801a      	strh	r2, [r3, #0]    *(p + 30) = *(p + 29);  6e:	1c23      	adds	r3, r4, #0  70:	333c      	adds	r3, #60	; 0x3c  72:	8f62      	ldrh	r2, [r4, #58]	; 0x3a  74:	801a      	strh	r2, [r3, #0]    *(p + 29) = *(p + 28);  76:	1c23      	adds	r3, r4, #0  78:	333a      	adds	r3, #58	; 0x3a  7a:	8f22      	ldrh	r2, [r4, #56]	; 0x38  7c:	801a      	strh	r2, [r3, #0]    *(p + 28) = *(p + 27);  7e:	1c23      	adds	r3, r4, #0  80:	3338      	adds	r3, #56	; 0x38  82:	8ee2      	ldrh	r2, [r4, #54]	; 0x36  84:	801a      	strh	r2, [r3, #0]    *(p + 27) = *(p + 26);  86:	1c23      	adds	r3, r4, #0  88:	3336      	adds	r3, #54	; 0x36  8a:	8ea2      	ldrh	r2, [r4, #52]	; 0x34  8c:	801a      	strh	r2, [r3, #0]    *(p + 26) = *(p + 25);  8e:	1c23      	adds	r3, r4, #0  90:	3334      	adds	r3, #52	; 0x34  92:	8e62      	ldrh	r2, [r4, #50]	; 0x32  94:	801a      	strh	r2, [r3, #0]    *(p + 25) = *(p + 24);  96:	1c23      	adds	r3, r4, #0  98:	3332      	adds	r3, #50	; 0x32  9a:	8e22      	ldrh	r2, [r4, #48]	; 0x30  9c:	801a      	strh	r2, [r3, #0]    *(p + 24) = *(p + 23);  9e:	1c23      	adds	r3, r4, #0  a0:	3330      	adds	r3, #48	; 0x30  a2:	8de2      	ldrh	r2, [r4, #46]	; 0x2e  a4:	801a      	strh	r2, [r3, #0]    *(p + 23) = *(p + 22);  a6:	1c23      	adds	r3, r4, #0  a8:	332e      	adds	r3, #46	; 0x2e  aa:	8da2      	ldrh	r2, [r4, #44]	; 0x2c  ac:	801a      	strh	r2, [r3, #0]    *(p + 22) = *(p + 21);  ae:	1c23      	adds	r3, r4, #0  b0:	332c      	adds	r3, #44	; 0x2c  b2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a  b4:	801a      	strh	r2, [r3, #0]    *(p + 21) = *(p + 20);  b6:	1c23      	adds	r3, r4, #0  b8:	332a      	adds	r3, #42	; 0x2a  ba:	8d22      	ldrh	r2, [r4, #40]	; 0x28  bc:	801a      	strh	r2, [r3, #0]    *(p + 20) = *(p + 19);  be:	1c23      	adds	r3, r4, #0  c0:	3328      	adds	r3, #40	; 0x28  c2:	8ce2      	ldrh	r2, [r4, #38]	; 0x26  c4:	801a      	strh	r2, [r3, #0]    *(p + 19) = *(p + 18);  c6:	1c23      	adds	r3, r4, #0  c8:	3326      	adds	r3, #38	; 0x26  ca:	8ca2      	ldrh	r2, [r4, #36]	; 0x24  cc:	801a      	strh	r2, [r3, #0]    *(p + 18) = *(p + 17);  ce:	1c23      	adds	r3, r4, #0  d0:	3324      	adds	r3, #36	; 0x24  d2:	8c62      	ldrh	r2, [r4, #34]	; 0x22  d4:	801a      	strh	r2, [r3, #0]    *(p + 17) = *(p + 16);  d6:	1c23      	adds	r3, r4, #0  d8:	3322      	adds	r3, #34	; 0x22  da:	8c22      	ldrh	r2, [r4, #32]  dc:	801a      	strh	r2, [r3, #0]    *(p + 16) = *(p + 15);  de:	1c23      	adds	r3, r4, #0  e0:	3320      	adds	r3, #32  e2:	8be2      	ldrh	r2, [r4, #30]  e4:	801a      	strh	r2, [r3, #0]    *(p + 15) = *(p + 14);  e6:	1c23      	adds	r3, r4, #0  e8:	331e      	adds	r3, #30  ea:	8ba2      	ldrh	r2, [r4, #28]  ec:	801a      	strh	r2, [r3, #0]    *(p + 14) = *(p + 13);  ee:	1c23      	adds	r3, r4, #0  f0:	331c      	adds	r3, #28  f2:	8b62      	ldrh	r2, [r4, #26]  f4:	801a      	strh	r2, [r3, #0]    *(p + 13) = *(p + 12);  f6:	1c23      	adds	r3, r4, #0  f8:	331a      	adds	r3, #26  fa:	8b22      	ldrh	r2, [r4, #24]  fc:	801a      	strh	r2, [r3, #0]    *(p + 12) = *(p + 11);  fe:	1c23      	adds	r3, r4, #0 100:	3318      	adds	r3, #24 102:	8ae2      	ldrh	r2, [r4, #22] 104:	801a      	strh	r2, [r3, #0]    *(p + 11) = *(p + 10); 106:	1c23      	adds	r3, r4, #0 108:	3316      	adds	r3, #22 10a:	8aa2      	ldrh	r2, [r4, #20] 10c:	801a      	strh	r2, [r3, #0]    *(p + 10) = *(p + 9); 10e:	1c23      	adds	r3, r4, #0 110:	3314      	adds	r3, #20 112:	8a62      	ldrh	r2, [r4, #18] 114:	801a      	strh	r2, [r3, #0]    *(p + 9) = *(p + 8); 116:	1c23      	adds	r3, r4, #0 118:	3312      	adds	r3, #18 11a:	8a22      	ldrh	r2, [r4, #16] 11c:	801a      	strh	r2, [r3, #0]    *(p + 8) = *(p + 7); 11e:	1c23      	adds	r3, r4, #0 120:	3310      	adds	r3, #16 122:	89e2      	ldrh	r2, [r4, #14] 124:	801a      	strh	r2, [r3, #0]    *(p + 7) = *(p + 6); 126:	1c23      	adds	r3, r4, #0 128:	330e      	adds	r3, #14 12a:	89a2      	ldrh	r2, [r4, #12] 12c:	801a      	strh	r2, [r3, #0]    *(p + 6) = *(p + 5); 12e:	1c23      	adds	r3, r4, #0 130:	330c      	adds	r3, #12 132:	8962      	ldrh	r2, [r4, #10] 134:	801a      	strh	r2, [r3, #0]    *(p + 5) = *(p + 4); 136:	1c23      	adds	r3, r4, #0 138:	330a      	adds	r3, #10 13a:	8922      	ldrh	r2, [r4, #8] 13c:	801a      	strh	r2, [r3, #0]    *(p + 4) = *(p + 3); 13e:	1c23      	adds	r3, r4, #0 140:	3308      	adds	r3, #8 142:	88e2      	ldrh	r2, [r4, #6] 144:	801a      	strh	r2, [r3, #0]    *(p + 3) = *(p + 2); 146:	1da3      	adds	r3, r4, #6 148:	88a2      	ldrh	r2, [r4, #4] 14a:	801a      	strh	r2, [r3, #0]    *(p + 2) = *(p + 1); 14c:	1d23      	adds	r3, r4, #4 14e:	8862      	ldrh	r2, [r4, #2] 150:	801a      	strh	r2, [r3, #0]    *(p + 1) = *p; 152:	1ca3      	adds	r3, r4, #2 154:	8822      	ldrh	r2, [r4, #0] 156:	801a      	strh	r2, [r3, #0]    *p = *e; 158:	687b      	ldr	r3, [r7, #4] 15a:	881b      	ldrh	r3, [r3, #0] 15c:	8023      	strh	r3, [r4, #0]    402,   -536,    342,    221,   -942,   1384,  -1061,   -298,   2545,  -5089,   7102,  24912,   7102,  -5089,   2545,   -298,  -1061,   1384,   -942,    221,    342,   -536,    402,   -127,    -98,    182,   -142,     53,     20,    -50,     46,    -25     */    result = (*(p + 40) + (*p)) * -25 15e:	1c23      	adds	r3, r4, #0 160:	3350      	adds	r3, #80	; 0x50 162:	881b      	ldrh	r3, [r3, #0] 164:	b21a      	sxth	r2, r3 166:	8823      	ldrh	r3, [r4, #0] 168:	b21b      	sxth	r3, r3 16a:	18d3      	adds	r3, r2, r3 16c:	2219      	movs	r2, #25 16e:	4252      	negs	r2, r2 170:	435a      	muls	r2, r3           + (*(p + 39) + (*(p + 1))) * 46 172:	1c23      	adds	r3, r4, #0 174:	334e      	adds	r3, #78	; 0x4e 176:	881b      	ldrh	r3, [r3, #0] 178:	b219      	sxth	r1, r3 17a:	1ca3      	adds	r3, r4, #2 17c:	881b      	ldrh	r3, [r3, #0] 17e:	b21b      	sxth	r3, r3 180:	18cb      	adds	r3, r1, r3 182:	212e      	movs	r1, #46	; 0x2e 184:	434b      	muls	r3, r1 186:	18d2      	adds	r2, r2, r3           + (*(p + 38) + (*(p + 2))) * -50 188:	1c23      	adds	r3, r4, #0 18a:	334c      	adds	r3, #76	; 0x4c 18c:	881b      	ldrh	r3, [r3, #0] 18e:	b219      	sxth	r1, r3 190:	1d23      	adds	r3, r4, #4 192:	881b      	ldrh	r3, [r3, #0] 194:	b21b      	sxth	r3, r3 196:	18cb      	adds	r3, r1, r3 198:	2132      	movs	r1, #50	; 0x32 19a:	4249      	negs	r1, r1 19c:	434b      	muls	r3, r1 19e:	18d1      	adds	r1, r2, r3           + (*(p + 37) + (*(p + 3))) * 20 1a0:	1c23      	adds	r3, r4, #0 1a2:	334a      	adds	r3, #74	; 0x4a 1a4:	881b      	ldrh	r3, [r3, #0] 1a6:	b21a      	sxth	r2, r3 1a8:	1da3      	adds	r3, r4, #6 1aa:	881b      	ldrh	r3, [r3, #0] 1ac:	b21b      	sxth	r3, r3 1ae:	18d2      	adds	r2, r2, r3 1b0:	1c13      	adds	r3, r2, #0 1b2:	009b      	lsls	r3, r3, #2 1b4:	189b      	adds	r3, r3, r2 1b6:	009b      	lsls	r3, r3, #2 1b8:	18ca      	adds	r2, r1, r3           + (*(p + 36) + (*(p + 4))) * 53 1ba:	1c23      	adds	r3, r4, #0 1bc:	3348      	adds	r3, #72	; 0x48 1be:	881b      	ldrh	r3, [r3, #0] 1c0:	b219      	sxth	r1, r3 1c2:	1c23      	adds	r3, r4, #0 1c4:	3308      	adds	r3, #8 1c6:	881b      	ldrh	r3, [r3, #0] 1c8:	b21b      	sxth	r3, r3 1ca:	18cb      	adds	r3, r1, r3 1cc:	2135      	movs	r1, #53	; 0x35 1ce:	434b      	muls	r3, r1 1d0:	18d2      	adds	r2, r2, r3           + (*(p + 35) + (*(p + 5))) * -142 1d2:	1c23      	adds	r3, r4, #0 1d4:	3346      	adds	r3, #70	; 0x46 1d6:	881b      	ldrh	r3, [r3, #0] 1d8:	b219      	sxth	r1, r3 1da:	1c23      	adds	r3, r4, #0 1dc:	330a      	adds	r3, #10 1de:	881b      	ldrh	r3, [r3, #0] 1e0:	b21b      	sxth	r3, r3 1e2:	18cb      	adds	r3, r1, r3 1e4:	218e      	movs	r1, #142	; 0x8e 1e6:	4249      	negs	r1, r1 1e8:	434b      	muls	r3, r1 1ea:	18d2      	adds	r2, r2, r3           + (*(p + 34) + (*(p + 6))) * 182 1ec:	1c23      	adds	r3, r4, #0 1ee:	3344      	adds	r3, #68	; 0x44 1f0:	881b      	ldrh	r3, [r3, #0] 1f2:	b219      	sxth	r1, r3 1f4:	1c23      	adds	r3, r4, #0 1f6:	330c      	adds	r3, #12 1f8:	881b      	ldrh	r3, [r3, #0] 1fa:	b21b      	sxth	r3, r3 1fc:	18cb      	adds	r3, r1, r3 1fe:	21b6      	movs	r1, #182	; 0xb6 200:	434b      	muls	r3, r1 202:	18d2      	adds	r2, r2, r3           + (*(p + 33) + (*(p + 7))) * -98 204:	1c23      	adds	r3, r4, #0 206:	3342      	adds	r3, #66	; 0x42 208:	881b      	ldrh	r3, [r3, #0] 20a:	b219      	sxth	r1, r3 20c:	1c23      	adds	r3, r4, #0 20e:	330e      	adds	r3, #14 210:	881b      	ldrh	r3, [r3, #0] 212:	b21b      	sxth	r3, r3 214:	18cb      	adds	r3, r1, r3 216:	2162      	movs	r1, #98	; 0x62 218:	4249      	negs	r1, r1 21a:	434b      	muls	r3, r1 21c:	18d2      	adds	r2, r2, r3           + (*(p + 32) + (*(p + 8))) * -127 21e:	1c23      	adds	r3, r4, #0 220:	3340      	adds	r3, #64	; 0x40 222:	881b      	ldrh	r3, [r3, #0] 224:	b219      	sxth	r1, r3 226:	1c23      	adds	r3, r4, #0 228:	3310      	adds	r3, #16 22a:	881b      	ldrh	r3, [r3, #0] 22c:	b21b      	sxth	r3, r3 22e:	18cb      	adds	r3, r1, r3 230:	1c19      	adds	r1, r3, #0 232:	01db      	lsls	r3, r3, #7 234:	1acb      	subs	r3, r1, r3 236:	18d2      	adds	r2, r2, r3           + (*(p + 31) + (*(p + 9))) * 402 238:	1c23      	adds	r3, r4, #0 23a:	333e      	adds	r3, #62	; 0x3e 23c:	881b      	ldrh	r3, [r3, #0] 23e:	b219      	sxth	r1, r3 240:	1c23      	adds	r3, r4, #0 242:	3312      	adds	r3, #18 244:	881b      	ldrh	r3, [r3, #0] 246:	b21b      	sxth	r3, r3 248:	18cb      	adds	r3, r1, r3 24a:	21c9      	movs	r1, #201	; 0xc9 24c:	0049      	lsls	r1, r1, #1 24e:	434b      	muls	r3, r1 250:	18d2      	adds	r2, r2, r3           + (*(p + 30) + (*(p + 10))) * -536 252:	1c23      	adds	r3, r4, #0 254:	333c      	adds	r3, #60	; 0x3c 256:	881b      	ldrh	r3, [r3, #0] 258:	b219      	sxth	r1, r3 25a:	1c23      	adds	r3, r4, #0 25c:	3314      	adds	r3, #20 25e:	881b      	ldrh	r3, [r3, #0] 260:	b21b      	sxth	r3, r3 262:	18cb      	adds	r3, r1, r3 264:	493e      	ldr	r1, [pc, #248]	; (360 <FirLPF40+0x360>) 266:	434b      	muls	r3, r1 268:	18d2      	adds	r2, r2, r3           + (*(p + 29) + (*(p + 11))) * 342 26a:	1c23      	adds	r3, r4, #0 26c:	333a      	adds	r3, #58	; 0x3a 26e:	881b      	ldrh	r3, [r3, #0] 270:	b219      	sxth	r1, r3 272:	1c23      	adds	r3, r4, #0 274:	3316      	adds	r3, #22 276:	881b      	ldrh	r3, [r3, #0] 278:	b21b      	sxth	r3, r3 27a:	18cb      	adds	r3, r1, r3 27c:	21ab      	movs	r1, #171	; 0xab 27e:	0049      	lsls	r1, r1, #1 280:	434b      	muls	r3, r1 282:	18d2      	adds	r2, r2, r3           + (*(p + 28) + (*(p + 12))) * 221 284:	1c23      	adds	r3, r4, #0 286:	3338      	adds	r3, #56	; 0x38 288:	881b      	ldrh	r3, [r3, #0] 28a:	b219      	sxth	r1, r3 28c:	1c23      	adds	r3, r4, #0 28e:	3318      	adds	r3, #24 290:	881b      	ldrh	r3, [r3, #0] 292:	b21b      	sxth	r3, r3 294:	18cb      	adds	r3, r1, r3 296:	21dd      	movs	r1, #221	; 0xdd 298:	434b      	muls	r3, r1 29a:	18d2      	adds	r2, r2, r3           + (*(p + 27) + (*(p + 13))) * -942 29c:	1c23      	adds	r3, r4, #0 29e:	3336      	adds	r3, #54	; 0x36 2a0:	881b      	ldrh	r3, [r3, #0] 2a2:	b219      	sxth	r1, r3 2a4:	1c23      	adds	r3, r4, #0 2a6:	331a      	adds	r3, #26 2a8:	881b      	ldrh	r3, [r3, #0] 2aa:	b21b      	sxth	r3, r3 2ac:	18cb      	adds	r3, r1, r3 2ae:	492d      	ldr	r1, [pc, #180]	; (364 <FirLPF40+0x364>) 2b0:	434b      	muls	r3, r1 2b2:	18d2      	adds	r2, r2, r3           + (*(p + 26) + (*(p + 14))) * 1384 2b4:	1c23      	adds	r3, r4, #0 2b6:	3334      	adds	r3, #52	; 0x34 2b8:	881b      	ldrh	r3, [r3, #0] 2ba:	b219      	sxth	r1, r3 2bc:	1c23      	adds	r3, r4, #0 2be:	331c      	adds	r3, #28 2c0:	881b      	ldrh	r3, [r3, #0] 2c2:	b21b      	sxth	r3, r3 2c4:	18cb      	adds	r3, r1, r3 2c6:	21ad      	movs	r1, #173	; 0xad 2c8:	00c9      	lsls	r1, r1, #3 2ca:	434b      	muls	r3, r1 2cc:	18d2      	adds	r2, r2, r3           + (*(p + 25) + (*(p + 15))) * -1061 2ce:	1c23      	adds	r3, r4, #0 2d0:	3332      	adds	r3, #50	; 0x32 2d2:	881b      	ldrh	r3, [r3, #0] 2d4:	b219      	sxth	r1, r3 2d6:	1c23      	adds	r3, r4, #0 2d8:	331e      	adds	r3, #30 2da:	881b      	ldrh	r3, [r3, #0] 2dc:	b21b      	sxth	r3, r3 2de:	18cb      	adds	r3, r1, r3 2e0:	4921      	ldr	r1, [pc, #132]	; (368 <FirLPF40+0x368>) 2e2:	434b      	muls	r3, r1 2e4:	18d2      	adds	r2, r2, r3           + (*(p + 24) + (*(p + 16))) * -298 2e6:	1c23      	adds	r3, r4, #0 2e8:	3330      	adds	r3, #48	; 0x30 2ea:	881b      	ldrh	r3, [r3, #0] 2ec:	b219      	sxth	r1, r3 2ee:	1c23      	adds	r3, r4, #0 2f0:	3320      	adds	r3, #32 2f2:	881b      	ldrh	r3, [r3, #0] 2f4:	b21b      	sxth	r3, r3 2f6:	18cb      	adds	r3, r1, r3 2f8:	491c      	ldr	r1, [pc, #112]	; (36c <FirLPF40+0x36c>) 2fa:	434b      	muls	r3, r1 2fc:	18d2      	adds	r2, r2, r3           + (*(p + 23) + (*(p + 17))) * 2545 2fe:	1c23      	adds	r3, r4, #0 300:	332e      	adds	r3, #46	; 0x2e 302:	881b      	ldrh	r3, [r3, #0] 304:	b219      	sxth	r1, r3 306:	1c23      	adds	r3, r4, #0 308:	3322      	adds	r3, #34	; 0x22 30a:	881b      	ldrh	r3, [r3, #0] 30c:	b21b      	sxth	r3, r3 30e:	18cb      	adds	r3, r1, r3 310:	4917      	ldr	r1, [pc, #92]	; (370 <FirLPF40+0x370>) 312:	434b      	muls	r3, r1 314:	18d2      	adds	r2, r2, r3           + (*(p + 22) + (*(p + 18))) * -5089 316:	1c23      	adds	r3, r4, #0 318:	332c      	adds	r3, #44	; 0x2c 31a:	881b      	ldrh	r3, [r3, #0] 31c:	b219      	sxth	r1, r3 31e:	1c23      	adds	r3, r4, #0 320:	3324      	adds	r3, #36	; 0x24 322:	881b      	ldrh	r3, [r3, #0] 324:	b21b      	sxth	r3, r3 326:	18cb      	adds	r3, r1, r3 328:	4912      	ldr	r1, [pc, #72]	; (374 <FirLPF40+0x374>) 32a:	434b      	muls	r3, r1 32c:	18d2      	adds	r2, r2, r3           + (*(p + 21) + (*(p + 19))) * 7102 32e:	1c23      	adds	r3, r4, #0 330:	332a      	adds	r3, #42	; 0x2a 332:	881b      	ldrh	r3, [r3, #0] 334:	b219      	sxth	r1, r3 336:	1c23      	adds	r3, r4, #0 338:	3326      	adds	r3, #38	; 0x26 33a:	881b      	ldrh	r3, [r3, #0] 33c:	b21b      	sxth	r3, r3 33e:	18cb      	adds	r3, r1, r3 340:	490d      	ldr	r1, [pc, #52]	; (378 <FirLPF40+0x378>) 342:	434b      	muls	r3, r1 344:	18d2      	adds	r2, r2, r3           + (*(p + 20)) * 24912; 346:	1c23      	adds	r3, r4, #0 348:	3328      	adds	r3, #40	; 0x28 34a:	881b      	ldrh	r3, [r3, #0] 34c:	b21b      	sxth	r3, r3 34e:	490b      	ldr	r1, [pc, #44]	; (37c <FirLPF40+0x37c>) 350:	434b      	muls	r3, r1    402,   -536,    342,    221,   -942,   1384,  -1061,   -298,   2545,  -5089,   7102,  24912,   7102,  -5089,   2545,   -298,  -1061,   1384,   -942,    221,    342,   -536,    402,   -127,    -98,    182,   -142,     53,     20,    -50,     46,    -25     */    result = (*(p + 40) + (*p)) * -25 352:	18d5      	adds	r5, r2, r3           + (*(p + 23) + (*(p + 17))) * (*(H + 17))           + (*(p + 22) + (*(p + 18))) * (*(H + 18))           + (*(p + 21) + (*(p + 19))) * (*(H + 19))           + (*(p + 20)) * (*(H + 20));*/    return result; 354:	1c2b      	adds	r3, r5, #0} 356:	1c18      	adds	r0, r3, #0 358:	46bd      	mov	sp, r7 35a:	b002      	add	sp, #8 35c:	bdb0      	pop	{r4, r5, r7, pc} 35e:	46c0      	nop			; (mov r8, r8) 360:	fffffde8 	.word	0xfffffde8 364:	fffffc52 	.word	0xfffffc52 368:	fffffbdb 	.word	0xfffffbdb 36c:	fffffed6 	.word	0xfffffed6 370:	000009f1 	.word	0x000009f1 374:	ffffec1f 	.word	0xffffec1f 378:	00001bbe 	.word	0x00001bbe 37c:	00006150 	.word	0x00006150